/*
    ChibiOS/RT - Copyright (C) 2006,2007,2008,2009,2010,
                 2011,2012,2013 Giovanni Di Sirio.

    This file is part of ChibiOS/RT.

    ChibiOS/RT is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 3 of the License, or
    (at your option) any later version.

    ChibiOS/RT is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

                                      ---

    A special exception to the GPL can be applied should you wish to distribute
    a combined work that includes ChibiOS/RT, without being obliged to provide
    the source code for any proprietary components. See the file exception.txt
    for full details of how and when the exception can be applied.
*/

/**
 * @defgroup SERIAL Serial Driver
 * @brief   Generic Serial Driver.
 * @details This module implements a generic full duplex serial driver. The
 *          driver implements a @p SerialDriver interface and uses I/O Queues
 *          for communication between the upper and the lower driver. Event
 *          flags are used to notify the application about incoming data,
 *          outgoing data and other I/O events.<br>
 *          The  module also contains functions that make the implementation
 *          of the interrupt service routines much easier.
 * @pre     In order to use the SERIAL driver the @p HAL_USE_SERIAL option
 *          must be enabled in @p halconf.h.
 *
 *
 * @section serial_1 Driver State Machine
 * The driver implements a state machine internally, not all the driver
 * functionalities can be used in any moment, any transition not explicitly
 * shown in the following diagram has to be considered an error and shall
 * be captured by an assertion (if enabled).
 * @dot
  digraph example {
    rankdir="LR";
    node [shape=circle, fontname=Helvetica, fontsize=8, fixedsize="true",
          width="0.9", height="0.9"];
    edge [fontname=Helvetica, fontsize=8];

    uninit [label="SD_UNINIT", style="bold"];
    stop [label="SD_STOP\nLow Power"];
    ready [label="SD_READY\nClock Enabled"];

    uninit -> stop [label=" sdInit()"];
    stop -> stop [label="\nsdStop()"];
    stop -> ready [label="\nsdStart()"];
    ready -> stop [label="\nsdStop()"];
    ready -> ready [label="\nsdStart()"];
    ready -> ready [label="\nAny I/O operation"];
  }
 * @enddot
 *
 * @ingroup IO
 */
