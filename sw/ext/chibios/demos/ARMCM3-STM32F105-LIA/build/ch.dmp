
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000211

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x000013dc memsz 0x000013e0 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x080013e0 align 2**15
         filesz 0x00000000 memsz 0x00000308 flags rw-
    LOAD off    0x00010000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       00000150  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000128c  08000150  08000150  00008150  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  080013dc  080013dc  000093dc  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00010000  2**0
                  ALLOC
  4 .bss          00000308  20000800  080013e0  00010800  2**3
                  ALLOC
  5 .debug_info   000169a9  00000000  00000000  000093dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00005a6d  00000000  00000000  0001fd85  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_loc    00006e27  00000000  00000000  000257f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 00000d80  00000000  00000000  0002c619  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00001698  00000000  00000000  0002d399  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00007aa8  00000000  00000000  0002ea31  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002f4b  00000000  00000000  000364d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .comment      0000003c  00000000  00000000  00039424  2**0
                  CONTENTS, READONLY
 13 .ARM.attributes 00000033  00000000  00000000  00039460  2**0
                  CONTENTS, READONLY
 14 .debug_frame  000021b4  00000000  00000000  00039494  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
08000150 l    d  .text	00000000 .text
080013dc l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 main.c
08001280 l     F .text	000000a0 Thread1
200009d8 l     O .bss	00000130 waThread1
080013d0 l     O .text	0000000c default_config.3252
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
080002f4 l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000800 l     O .bss	00000048 mainthread.1984
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000610 l     F .text	0000005c wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08000a00 l     F .text	0000002c qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000934 l     O .bss	00000004 endmem
20000938 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 chheap.c
20000940 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 serial.c
08000d70 l     F .text	00000006 readt
08000d80 l     F .text	0000000a read
08000d90 l     F .text	00000006 writet
08000da0 l     F .text	0000000a write
08000db0 l     F .text	00000006 gett
08000dc0 l     F .text	0000000a get
08000dd0 l     F .text	00000006 putt
08000de0 l     F .text	0000000a put
08001350 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 pal_lld.c
00000000 l    df *ABS*	00000000 serial_lld.c
08001070 l     F .text	00000014 notify4
08001370 l     O .text	0000000c default_config
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chlists.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chsem.c
00000000 l    df *ABS*	00000000 chcond.c
00000000 l    df *ABS*	00000000 chmsg.c
00000000 l    df *ABS*	00000000 chmboxes.c
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 test.c
00000000 l    df *ABS*	00000000 testthd.c
00000000 l    df *ABS*	00000000 testsem.c
00000000 l    df *ABS*	00000000 testmtx.c
00000000 l    df *ABS*	00000000 testmsg.c
00000000 l    df *ABS*	00000000 testmbox.c
00000000 l    df *ABS*	00000000 testevt.c
00000000 l    df *ABS*	00000000 testheap.c
00000000 l    df *ABS*	00000000 testpools.c
00000000 l    df *ABS*	00000000 testdyn.c
00000000 l    df *ABS*	00000000 testqueues.c
00000000 l    df *ABS*	00000000 testbmk.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 ext.c
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 icu.c
00000000 l    df *ABS*	00000000 mac.c
00000000 l    df *ABS*	00000000 mmc_spi.c
00000000 l    df *ABS*	00000000 mmcsd.c
00000000 l    df *ABS*	00000000 pal.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 sdc.c
00000000 l    df *ABS*	00000000 serial_usb.c
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 tm.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 stm32_dma.c
00000000 l    df *ABS*	00000000 adc_lld.c
00000000 l    df *ABS*	00000000 ext_lld_isr.c
00000000 l    df *ABS*	00000000 can_lld.c
00000000 l    df *ABS*	00000000 ext_lld.c
00000000 l    df *ABS*	00000000 mac_lld.c
00000000 l    df *ABS*	00000000 sdc_lld.c
00000000 l    df *ABS*	00000000 i2c_lld.c
00000000 l    df *ABS*	00000000 rtc_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
00000000 l    df *ABS*	00000000 gpt_lld.c
00000000 l    df *ABS*	00000000 icu_lld.c
00000000 l    df *ABS*	00000000 pwm_lld.c
00000000 l    df *ABS*	00000000 uart_lld.c
00000000 l    df *ABS*	00000000 usb_lld.c
00000000 l    df *ABS*	00000000 evtimer.c
00000000 l    df *ABS*	00000000 syscalls.c
00000000 l    df *ABS*	00000000 memset.c
08001380 g     O .text	0000003c pal_default_config
080002e0  w    F .text	00000002 Vector58
080002e0  w    F .text	00000002 VectorE8
080002e0  w    F .text	00000002 Vector9C
08000410 g     F .text	00000042 nvicEnableVector
080002e0  w    F .text	00000002 VectorAC
08000980 g     F .text	0000000a chThdExit
08000520 g     F .text	00000058 chSysTimerHandlerI
080009d0 g     F .text	00000022 chEvtBroadcastFlagsI
080006e0 g     F .text	00000040 chSchGoSleepTimeoutS
080002e0  w    F .text	00000002 Vector5C
080002e0  w    F .text	00000002 NMIVector
080002e0  w    F .text	00000002 Vector11C
080002e0  w    F .text	00000002 Vector8C
080002e0  w    F .text	00000002 VectorDC
08000000 g     O startup	00000150 _vectors
080006b0 g     F .text	00000028 chSchGoSleepS
08001090 g     F .text	00000104 Vector110
20000b08 g       *ABS*	00000000 __heap_base__
080013e0 g       *ABS*	00000000 _etext
080002e0  w    F .text	00000002 Vector120
08000870 g     F .text	0000006c chThdCreateI
080002e0  w    F .text	00000002 VectorC8
08000720 g     F .text	00000058 chSchWakeupS
08000e70 g     F .text	0000003c sdIncomingDataI
08000be0 g     F .text	00000046 chOQGetI
08000670 g     F .text	00000016 _scheduler_init
080008e0 g     F .text	0000002a chThdCreateStatic
080002e0  w    F .text	00000002 Vector94
080002e0  w    F .text	00000002 VectorA8
080002e0  w    F .text	00000002 VectorB4
08000690 g     F .text	00000020 chSchReadyI
08000150 g       startup	00000000 __fini_array_end
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000580 g     F .text	00000018 _vt_init
08000d30 g     F .text	00000020 _heap_init
080002e0  w    F .text	00000002 Vector74
08000d50 g     F .text	0000001e halInit
080002e0  w    F .text	00000002 VectorEC
20000800 g       .bss	00000000 _bss_start
08000780 g     F .text	00000040 chSchDoRescheduleBehind
080002e0  w    F .text	00000002 UsageFaultVector
20010000 g       *ABS*	00000000 __heap_end__
080002e0  w    F .text	00000002 DebugMonitorVector
080002e0  w    F .text	00000002 Vector40
080002e0  w    F .text	00000002 VectorF8
080002e0  w    F .text	00000002 Vector108
08000210 g     F .text	000000c8 ResetHandler
08000af0 g     F .text	00000072 chIQReadTimeout
080002e0  w    F .text	00000002 VectorBC
080002e0  w    F .text	00000002 Vector124
08000320 g     F .text	00000036 _port_init
08000eb0 g     F .text	00000074 hal_lld_init
08000930 g     F .text	00000044 chThdExitS
080002e0  w    F .text	00000002 Vector148
080002e0  w    F .text	00000002 PendSVVector
080002e0  w    F .text	00000002 Vector118
080005a0 g     F .text	0000003c chVTSetI
080002e0  w    F .text	00000002 Vector64
20000b08 g       .bss	00000000 _bss_end
08000200  w    F .text	00000002 _default_exit
080002e0  w    F .text	00000002 VectorCC
080011a0 g     F .text	00000026 sd_lld_init
080002e0  w    F .text	00000002 Vector54
080002e0  w    F .text	00000002 Vector98
080002e0  w    F .text	00000002 VectorD8
080002e0  w    F .text	00000002 Vector138
080002e0  w    F .text	00000002 Vector24
08000800 g     F .text	00000014 chSchDoReschedule
080004b0 g     F .text	00000066 chSysInit
08000910 g     F .text	00000018 chThdSleep
08000a30 g     F .text	0000001e chIQInit
080002e0  w    F .text	00000002 Vector84
080003d0 g     F .text	0000001a SysTickVector
08000f30 g     F .text	000000c0 stm32_clock_init
08000ff0 g     F .text	0000007a _pal_lld_init
08000df0 g     F .text	00000004 sdInit
080002e0  w    F .text	00000002 BusFaultVector
080002e0  w    F .text	00000002 VectorD0
08000cc0 g     F .text	0000002c _core_init
08000e50 g     F .text	0000001a sdStart
080002e0  w    F .text	00000002 Vector140
080002e0  w    F .text	00000002 VectorE4
080002e0  w    F .text	00000002 VectorC0
080002e0  w    F .text	00000002 Vector130
080003f0 g     F .text	00000010 _port_switch
00010000 g       *ABS*	00000000 __ram_size__
08000300 g     F .text	00000012 SVCallVector
080001f0  w    F .text	00000002 __late_init
20000960 g     O .bss	00000078 SD4
20000908 g     O .bss	00000010 vtlist
080002e0  w    F .text	00000002 HardFaultVector
08000360 g     F .text	00000070 _port_irq_epilogue
080002e0  w    F .text	00000002 Vector134
08000cf0 g     F .text	00000034 chCoreAlloc
080002e0  w    F .text	00000002 VectorF0
080002e0  w    F .text	00000002 Vector12C
080002e0  w    F .text	00000002 Vector13C
080002e0  w    F .text	00000002 Vector100
080013e0 g       *ABS*	00000000 _textdata
080002e0  w    F .text	00000002 VectorE0
00000000 g       *ABS*	00000000 _text
080002e0  w    F .text	00000002 VectorF4
080002e0  w    F .text	00000002 MemManageVector
08000150 g       startup	00000000 __fini_array_start
08000150 g     F .text	0000009c main
080002e0  w    F .text	00000002 Vector6C
20000918 g     O .bss	0000001c rlist
080002e0  w    F .text	00000002 VectorA0
08000150 g       startup	00000000 __init_array_end
080002e0  w    F .text	00000002 VectorC4
080002e0  w    F .text	00000002 Vector7C
08000990 g     F .text	0000000a chMtxInit
08000490 g     F .text	00000014 _idle_thread
08000c30 g     F .text	00000086 chOQWriteTimeout
080002e0  w    F .text	00000002 VectorB0
08001330 g     O .text	00000016 ch_debug
080002e0  w    F .text	00000002 Vector90
080009a0 g     F .text	0000002e chEvtSignalI
080002e0  w    F .text	00000002 Vector114
20000000 g       *ABS*	00000000 __ram_start__
08000400 g     F .text	00000010 _port_thread_start
080002e0  w    F .text	00000002 Vector60
080002e0  w    F .text	00000002 Vector1C
080007c0 g     F .text	0000003c chSchDoRescheduleAhead
080002e0  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
080002e0  w    F .text	00000002 Vector70
080002e0  w    F .text	00000002 VectorD4
08000460 g     F .text	0000002c nvicSetSystemHandlerPriority
20000848 g     O .bss	000000c0 _idle_thread_wa
08000b70 g     F .text	0000001c chOQInit
08000aa0 g     F .text	00000048 chIQGetTimeout
20000800 g       .bss	00000000 _data
080002e0  w    F .text	00000002 Vector4C
080002e0  w    F .text	00000002 Vector144
080002e0  w    F .text	00000002 Vector80
08000a50 g     F .text	0000004e chIQPutI
080002f0 g     F .text	00000006 _port_switch_from_isr
080002e0  w    F .text	00000002 Vector68
20000400 g       .stacks	00000000 __main_stack_end__
080002e0  w    F .text	00000002 Vector78
20010000 g       *ABS*	00000000 __ram_end__
20000800 g       .bss	00000000 _edata
20000b08 g       *ABS*	00000000 _end
080005e0 g     F .text	00000024 chVTResetI
080002e0 g     F .text	00000002 _unhandled_exception
08000e00 g     F .text	00000044 sdObjectInit
080002e0  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
080002e0  w    F .text	00000002 Vector104
080002e0  w    F .text	00000002 Vector10C
08000150 g       startup	00000000 __init_array_start
080002e0  w    F .text	00000002 Vector14C
08000820 g     F .text	00000046 _thread_init
080002e0  w    F .text	00000002 Vector50
08000b90 g     F .text	0000004e chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
080002e0  w    F .text	00000002 Vector44
080002e0  w    F .text	00000002 Vector28
08001270 g     F .text	00000010 boardInit
080002e0  w    F .text	00000002 VectorB8
080011d0 g     F .text	00000090 sd_lld_start
00000400 g       *ABS*	00000000 __main_stack_size__
080002e0  w    F .text	00000002 VectorFC
20000800 g       .stacks	00000000 __process_stack_end__
080002e0  w    F .text	00000002 Vector34
08001260 g     F .text	00000004 __early_init
080002e0  w    F .text	00000002 Vector128
080002e0  w    F .text	00000002 VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
080002e0  w    F .text	00000002 Vector20


