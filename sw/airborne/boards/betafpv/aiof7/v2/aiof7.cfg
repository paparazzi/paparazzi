MCU_MODEL = STM32F722R(C-E)Tx
CHIBIOS_VERSION = 3.0

HEADER
/*
 * Board identifier.
 */
#define BOARD_AIOF7
#define BOARD_NAME                  "AIO F7"

/*
 * Board oscillators-related settings.
 */
#if !defined(STM32_LSECLK)
#define STM32_LSECLK                32768U
#endif

#define STM32_LSEDRV                (3U << 3U)

#if !defined(STM32_HSECLK)
#define STM32_HSECLK                8000000U
#endif

/*
 * Board voltages.
 * Required for performance limits calculation.
 */
#define STM32_VDD                   300U

/*
 * MCU type as defined in the ST header.
 */
#define STM32F722xx

/**
 * DSHOT
 */


#define DSHOT_TIM3_TELEMETRY_DEV NULL
#define DSHOT_TIM4_TELEMETRY_DEV NULL
#define DSHOT_TIM5_TELEMETRY_DEV NULL



#ifndef USE_DSHOT_TIM3
#define USE_DSHOT_TIM3 1 // SERVO1 SERVO2
#endif

#ifndef USE_DSHOT_TIM4
#define USE_DSHOT_TIM4 1 // SERVO5 SERVO6
#endif

#ifndef USE_DSHOT_TIM5
#define USE_DSHOT_TIM5 1 // SERVO3 SERVO4
#endif

#if USE_DSHOT_TIM3 // SERVO1 SERVO2 on TIM3

#define DSHOT_SERVO_1 1
#define DSHOT_SERVO_1_GPIO PAL_PORT(LINE_SERVO1)
#define DSHOT_SERVO_1_PIN PAL_PAD(LINE_SERVO1)
#define DSHOT_SERVO_1_AF AF_LINE_SERVO1
#define DSHOT_SERVO_1_DRIVER CONCAT_BOARD_PARAM(DSHOTD, SERVO1_TIM)
#define DSHOT_SERVO_1_CHANNEL SERVO1_TIM_CH

#define DSHOT_SERVO_2 2
#define DSHOT_SERVO_2_GPIO PAL_PORT(LINE_SERVO2)
#define DSHOT_SERVO_2_PIN PAL_PAD(LINE_SERVO2)
#define DSHOT_SERVO_2_AF AF_LINE_SERVO2
#define DSHOT_SERVO_2_DRIVER CONCAT_BOARD_PARAM(DSHOTD, SERVO2_TIM)
#define DSHOT_SERVO_2_CHANNEL SERVO2_TIM_CH


#define DSHOT_CONF_TIM3 1
#define DSHOT_CONF3_DEF { \
  .dma_stream = STM32_PWM3_UP_DMA_STREAM,   \
  .dma_channel = STM32_PWM3_UP_DMA_CHANNEL, \
  .pwmp = &PWMD3,                           \
  .tlm_sd = DSHOT_TIM3_TELEMETRY_DEV,       \
  .dma_buf = &dshot3DmaBuffer,              \
  .dcache_memory_in_use = false             \
}

#endif


#if USE_DSHOT_TIM4 // SERVO5 SERVO6 on TIM4

#define DSHOT_SERVO_5 5
#define DSHOT_SERVO_5_GPIO PAL_PORT(LINE_SERVO5)
#define DSHOT_SERVO_5_PIN PAL_PAD(LINE_SERVO5)
#define DSHOT_SERVO_5_AF AF_LINE_SERVO5
#define DSHOT_SERVO_5_DRIVER CONCAT_BOARD_PARAM(DSHOTD, SERVO5_TIM)
#define DSHOT_SERVO_5_CHANNEL SERVO5_TIM_CH

#define DSHOT_SERVO_6 6
#define DSHOT_SERVO_6_GPIO PAL_PORT(LINE_SERVO6)
#define DSHOT_SERVO_6_PIN PAL_PAD(LINE_SERVO6)
#define DSHOT_SERVO_6_AF AF_LINE_SERVO6
#define DSHOT_SERVO_6_DRIVER CONCAT_BOARD_PARAM(DSHOTD, SERVO6_TIM)
#define DSHOT_SERVO_6_CHANNEL SERVO6_TIM_CH


#define DSHOT_CONF_TIM4 1
#define DSHOT_CONF4_DEF { \
  .dma_stream = STM32_PWM4_UP_DMA_STREAM,   \
  .dma_channel = STM32_PWM4_UP_DMA_CHANNEL, \
  .pwmp = &PWMD4,                           \
  .tlm_sd = DSHOT_TIM4_TELEMETRY_DEV,       \
  .dma_buf = &dshot4DmaBuffer,              \
  .dcache_memory_in_use = false             \
}

#endif

#if USE_DSHOT_TIM5 // SERVO3 SERVO4 on TIM5

#define DSHOT_SERVO_3 3
#define DSHOT_SERVO_3_GPIO PAL_PORT(LINE_SERVO3)
#define DSHOT_SERVO_3_PIN PAL_PAD(LINE_SERVO3)
#define DSHOT_SERVO_3_AF AF_LINE_SERVO3
#define DSHOT_SERVO_3_DRIVER CONCAT_BOARD_PARAM(DSHOTD, SERVO3_TIM)
#define DSHOT_SERVO_3_CHANNEL SERVO3_TIM_CH

#define DSHOT_SERVO_4 4
#define DSHOT_SERVO_4_GPIO PAL_PORT(LINE_SERVO4)
#define DSHOT_SERVO_4_PIN PAL_PAD(LINE_SERVO4)
#define DSHOT_SERVO_4_AF AF_LINE_SERVO4
#define DSHOT_SERVO_4_DRIVER CONCAT_BOARD_PARAM(DSHOTD, SERVO4_TIM)
#define DSHOT_SERVO_4_CHANNEL SERVO4_TIM_CH


#define DSHOT_CONF_TIM5 1
#define DSHOT_CONF5_DEF { \
  .dma_stream = STM32_PWM5_UP_DMA_STREAM,   \
  .dma_channel = STM32_PWM5_UP_DMA_CHANNEL, \
  .pwmp = &PWMD5,                           \
  .tlm_sd = DSHOT_TIM5_TELEMETRY_DEV,       \
  .dma_buf = &dshot5DmaBuffer,              \
  .dcache_memory_in_use = false             \
}

#endif

/*
 * enable TIM5, TIM3, TIM4 by default
 */
#ifndef USE_PWM_TIM3
#define USE_PWM_TIM3 1
#endif

#ifndef USE_PWM_TIM4
#define USE_PWM_TIM4 1
#endif

#ifndef USE_PWM_TIM5
#define USE_PWM_TIM5 1
#endif

/* allow to define ADC_CHANNEL_VSUPPLY in the airframe file*/
#ifndef ADC_CHANNEL_VSUPPLY
#define ADC_CHANNEL_VSUPPLY ADC_1
#endif

#define DefaultVoltageOfAdc(adc) ((3.3f/4096.0f)*10.91*adc)
CONFIG


# PIN NAME PERIPH_TYPE AF_NUMBER or
# PIN NAME FUNCTION PP_or_OPENDRAIN PIN_SPEED PULL_RESISTOR INITIAL_LEVEL AF_NUMBER
# SPEED : SPEED_VERYLOW, SPEED_LOW, SPEED_MEDIUM, SPEED_HIGH
#
# DEFAULT AND SYS
# 
# 'SYS' => ['ALTERNATE', 'PUSHPULL', 'SPEED_HIGH', 'FLOATING', 'LEVEL_HIGH'],
# 'ADC' => ['ANALOG', 'PUSHPULL', 'SPEED_HIGH', 'FLOATING', 'LEVEL_LOW'],
# 'PWM' => ['ALTERNATE', 'PUSHPULL', 'SPEED_HIGH', 'FLOATING', 'LEVEL_LOW'],
# 'ICU' => ['ALTERNATE', 'PUSHPULL', 'SPEED_HIGH', 'FLOATING', 'LEVEL_HIGH'],
# 'I2C' => ['ALTERNATE', 'OPENDRAIN', 'SPEED_HIGH', 'PULLUP', 'LEVEL_HIGH'],
# 'SPI' => ['ALTERNATE', 'PUSHPULL', 'SPEED_HIGH', 'FLOATING', 'LEVEL_HIGH'],
# 'UART' => ['ALTERNATE', 'PUSHPULL', 'SPEED_HIGH', 'PULLUP', 'LEVEL_HIGH'],
# 'OTG' => ['ALTERNATE', 'PUSHPULL', 'SPEED_HIGH', 'FLOATING', 'LEVEL_HIGH'],
# 'ETH' => ['ALTERNATE', 'PUSHPULL', 'SPEED_HIGH', 'FLOATING', 'LEVEL_HIGH'],
# 'FSMC' => ['ALTERNATE', 'PUSHPULL', 'SPEED_HIGH', 'FLOATING', 'LEVEL_HIGH'],
# 'SDIO' => ['ALTERNATE', 'PUSHPULL', 'SPEED_HIGH', 'PULLUP', 'LEVEL_HIGH'],
# 'SDIOCK' => ['ALTERNATE', 'PUSHPULL', 'SPEED_HIGH', 'FLOATING', 'LEVEL_HIGH'],
# 'CAN' => ['ALTERNATE', 'PUSHPULL', 'SPEED_HIGH', 'FLOATING', 'LEVEL_HIGH'],
# 'DCMI' => ['ALTERNATE', 'PUSHPULL', 'SPEED_HIGH', 'FLOATING', 'LEVEL_HIGH'],
# 'LED' => ['OUTPUT', 'PUSHPULL', 'SPEED_VERYLOW', 'FLOATING', 'LEVEL_LOW'],
# 'PASSIVE' => ['INPUT', 'PUSHPULL', 'SPEED_VERYLOW', 'FLOATING', 'LEVEL_LOW']);
#
# SYSTEM
A13     SWDIO     SYS  AF:SYS_JTMS-SWDIO
A14     SWCLK     SYS  AF:SYS_JTCK-SWCLK
# C14     OSC32_IN  SYS  AF0
# C15     OSC32_OUT SYS  AF0
H00     OSC_IN    SYS  AF0
H01     OSC_OUT   SYS  AF0

#DEFAULT
DEFAULT                 INPUT   PUSHPULL SPEED_VERYLOW PULLDOWN LEVEL_LOW  AF0



# ACTIVE PINS



PA00    SERVO4		    PWM 	    AF:TIM5_CH1 ()
PA01    SERVO3		    PWM 	    AF:TIM5_CH2 ()
PA02    UART2_TX		UART	    AF:USART2_TX
PA03    UART2_RX	    UART	    AF:USART2_RX    
PA04    SPI_SLAVE0      OUTPUT	    PUSHPULL  SPEED_HIGH FLOATING LEVEL_HIGH # GYRO1_EXT_CS
PA05    SPI1_CLK        SPI		    AF:SPI1_SCK
PA06    SPI1_MISO       SPI		    AF:SPI1_MISO  
PA07    SPI1_MOSI       SPI		    AF:SPI1_MOSI   
PA08    AUX             PWM 	    AF:TIM1_CH1 ()
PA09    UART1_TX	    UART	    AF:USART1_TX    
PA10	UART1_RX	    UART	    AF:USART1_RX       
PA11    OTG_FS_DM	    OTG		    AF:USB_OTG_FS_DM
PA12    OTG_FS_DP	    OTG		    AF:USB_OTG_FS_DP
PA15    SPI_SLAVE1      OUTPUT	    PUSHPULL  SPEED_HIGH FLOATING LEVEL_HIGH # OSD_EXT_CS

PB00	SERVO1		    PWM 	    AF:TIM3_CH3 ()
PB01	SERVO2		    PWM 	    AF:TIM3_CH4 ()
PB02    GYRO_EXTI_2	    INPUT       PULLUP                    
PB03    SPI3_CLK        SPI		    AF:SPI3_SCK
PB04    SPI3_MISO       SPI		    AF:SPI3_MISO  
PB05    SPI3_MOSI       SPI		    AF:SPI3_MOSI   
PB06    SERVO5		    PWM 	    AF:TIM4_CH1 ()
PB07    SERVO6		    PWM 	    AF:TIM4_CH2 ()
PB08    I2C1_SCL        I2C		    AF:I2C1_SCL 
PB09    I2C1_SDA        I2C		    AF:I2C1_SDA 
PB10    UART3_TX	    UART	    AF:USART3_TX    
PB11    RC1     	    UART	    AF:USART3_RX ()   
PB12    SPI_SLAVE2      OUTPUT	    PUSHPULL  SPEED_HIGH FLOATING LEVEL_HIGH # FLASH_EXT_CS
PB13    SPI2_CLK        SPI		    AF:SPI2_SCK
PB14    SPI2_MISO       SPI		    AF:SPI2_MISO  
PB15    SPI2_MOSI       SPI		    AF:SPI2_MOSI     
	                    
PC00    ADC1     	    ADC		    ADC1_IN10 ()
PC03    SPI_SLAVE3      OUTPUT	    PUSHPULL  SPEED_HIGH FLOATING LEVEL_HIGH # GYRO2_EXT_CS
PC04    GYRO_EXTI_1		INPUT       PULLUP          
PC06    UART6_TX	    UART	    AF:USART6_TX    
PC07    UART6_RX	    UART	    AF:USART6_RX     
PC10	UART4_TX	    UART	    AF:UART4_TX    
PC11	UART4_RX	    UART	    AF:UART4_RX
PC12	UART5_TX	    UART	    AF:UART5_TX   
PC13    SPI_SLAVE4      OUTPUT	    PUSHPULL  SPEED_HIGH FLOATING LEVEL_HIGH # BARO_EXT_CS
PC14    BEEPER          OUTPUT	    PUSHPULL  SPEED_HIGH FLOATING LEVEL_LOW	       
PC15    LED1            LED	     
	                    
PD02	UART5_RX	    UART	    AF:UART5_RX




# GROUPS
GROUP   ENERGY_SAVE_INPUT   %NAME=~/^AUX_[A-B][0-9]+|LED[0-9]+|.*_CS$/
