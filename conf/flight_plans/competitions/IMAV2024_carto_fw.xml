<?xml version="1.0"?>
<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">
<flight_plan alt="40" ground_alt="5" home_mode_height="30" lat0="51.4045109" lon0="-2.8193286" max_dist_from_home="600" name="IMAV2024 Carto fixed-wing" qfu="250." security_height="10">
  <header>
#include "modules/datalink/datalink.h"
static inline bool delay_test_rc(bool test UNUSED, int delay UNUSED) {
#if SITL
  return false;
#else
  static int nb = 0;
  if (test) {
    nb++;
    if (nb == delay) {
      nb = 0;
      return true;
    }
    return false;
  } else {
    nb = 0;
    return false;
  }
#endif
}
static inline bool delay_test_gf(bool test UNUSED, int delay UNUSED) {
#if SITL
  return false;
#else
  static int nb = 0;
  if (test) {
    nb++;
    if (nb == delay) {
      nb = 0;
      return true;
    }
    return false;
  } else {
    nb = 0;
    return false;
  }
#endif
}

#define WaypointDist(_wp1, _wp2) (sqrtf(DistanceSquare(WaypointX(_wp1),WaypointY(_wp1),WaypointX(_wp2),WaypointY(_wp2))))

#if DIGITAL_CAM
#define LINE_START_FUNCTION if (mapping_shot) { dc_Survey(mapping_shot_distance); } else { dc_autoshoot = DC_AUTOSHOOT_STOP; }
#define LINE_STOP_FUNCTION dc_autoshoot = DC_AUTOSHOOT_STOP;
#endif

#define NavQdrCloseToAxis(_from, _to) NavQdrCloseTo(DegOfRad(-atan2f(WaypointY(_to) - WaypointY(_from), WaypointX(_to) - WaypointX(_from))))
  </header>
  <waypoints>
    <waypoint name="HOME" x="18.462" y="-72.154"/>
    <waypoint name="STDBY" x="38.643" y="-48.229"/>
    <waypoint alt="5" name="TD" x="15.73" y="-22.048"/>
    <waypoint alt="25" name="AF" x="131.918" y="51.292"/>
    <waypoint name="_BASELEG" x="168.8" y="-13.8"/>
    <waypoint name="CLIMB" x="-64.705" y="-94.836"/>
    <!--waypoint name="P1" x="164.51" y="27.772"/>
    <waypoint name="P2" x="-41.797" y="-139.096"/>
    <waypoint name="_C1" x="151.573" y="31.161"/>
    <waypoint name="_C2" x="-55.663" y="-114.939"/-->
    <waypoint name="MAP1" lat="51.40397348780787" lon="-2.820792534133579"/>
    <waypoint name="MAP2" lat="51.40324827491988" lon="-2.822579075697425"/>
    <waypoint name="MAP3" lat="51.40216290330571" lon="-2.821736580096323"/>
    <waypoint name="MAP4" lat="51.40318633735384" lon="-2.820434907050242"/>
    <waypoint name="ZBC" x="-136.955" y="-155.073"/>
    <waypoint name="ZBDIR" x="-169.598" y="-175.953"/>
    <waypoint name="C1" lat="51.40337101177714" lon="-2.81946343972307"/>
    <waypoint name="C2" lat="51.40269828686684" lon="-2.81854499646789"/>
    <waypoint name="C3" lat="51.40412401003561" lon="-2.81582776937354"/>
    <waypoint name="C4" lat="51.40480870184149" lon="-2.81670290546800"/>
    <waypoint name="_KILL1" lat="51.4037999994502" lon="-2.81235628238941"/>
    <waypoint name="_KILL2" lat="51.4068594662325" lon="-2.81500423477735"/>
    <waypoint name="_KILL3" lat="51.4057914135146" lon="-2.81767832087734"/>
    <waypoint name="_KILL4" lat="51.4050872678795" lon="-2.81840937698165"/>
    <waypoint name="_KILL5" lat="51.4044429026898" lon="-2.81999822497422"/>
    <waypoint name="_KILL6" lat="51.4045354063380" lon="-2.82099070071843"/>
    <waypoint name="_KILL7" lat="51.4029174531834" lon="-2.82498963302300"/>
    <waypoint name="_KILL8" lat="51.3999463540515" lon="-2.82207948203042"/>
    <waypoint name="_FLY1" lat="51.40424870902749" lon="-2.820119499603871"/>
    <!--waypoint name="_FLY2" lat="51.40364806450683" lon="-2.821602369304292"/-->
    <waypoint name="_FLY3" lat="51.40277234701238" lon="-2.823731664510897"/>
    <waypoint name="_FLY4" lat="51.40074322069155" lon="-2.821774308525683"/>
    <waypoint name="_FLY5" lat="51.40400414773781" lon="-2.813566012884135"/>
    <waypoint name="_FLY6" lat="51.40610220954286" lon="-2.815401874714203"/>
    <!--waypoint name="_FLY7" lat="51.40434319438164" lon="-2.819871389267096"/-->
  </waypoints>
  <sectors>
    <sector color="red" name="Kill">
      <corner name="_KILL1"/>
      <corner name="_KILL2"/>
      <corner name="_KILL3"/>
      <corner name="_KILL4"/>
      <corner name="_KILL5"/>
      <corner name="_KILL6"/>
      <corner name="_KILL7"/>
      <corner name="_KILL8"/>
    </sector>
    <sector color="green" name="Flight_Area">
      <corner name="_FLY1"/>
      <corner name="_FLY3"/>
      <corner name="_FLY4"/>
      <corner name="_FLY5"/>
      <corner name="_FLY6"/>
    </sector>
    <sector color="yellow" name="Survey">
      <corner name="MAP1"/>
      <corner name="MAP2"/>
      <corner name="MAP3"/>
      <corner name="MAP4"/>
    </sector>
    <sector color="blue" name="Circuit">
      <corner name="C1"/>
      <corner name="C2"/>
      <corner name="C3"/>
      <corner name="C4"/>
    </sector>
  </sectors>
  <variables>
    <variable init="30." var="mapping_height" min="20." max="120." step="1."/>
    <variable init="25." var="mapping_sweep" min="5." max="20." step="0.1"/>
    <variable init="120." var="mapping_length" min="50." max="600." step="10."/>
    <variable init="3." var="mapping_lines" min="3." max="15." step="0.1"/>
    <variable init="0" var="mapping_shot" min="0" max="1" step="1"/>
    <variable init="20." var="mapping_shot_distance" min="5." max="60." step="0.1"/>
  </variables>
  <modules>
    <module name="nav" type="survey_zamboni"/>
    <module name="power_switch"/>
  </modules>
  <exceptions>
    <exception cond="(delay_test_rc(RCLost(),20)
      @AND (nav_block @GT IndexOfBlock('Holding point'))
      @AND (nav_block @LEQ IndexOfBlock('flare'))
      @AND (autopilot.launch == true))" deroute="EmergencyLanding"/>
    <exception cond="(datalink_time @GT 10
      @AND (nav_block @GT IndexOfBlock('Holding point'))
      @AND (nav_block @LEQ IndexOfBlock('flare'))
      @AND (autopilot.launch == true))" deroute="EmergencyLanding"/>
    <exception cond="(delay_test_gf(!InsideKill(GetPosX(), GetPosY()),20)
      @AND (nav_block @GT IndexOfBlock('Takeoff'))
      @AND (nav_block @LEQ IndexOfBlock('Land Right AF-TD'))
      @AND (autopilot.launch == true))" deroute="EmergencyLanding"/>
  </exceptions>
  <blocks>
    <block name="Wait GPS">
      <set value="1" var="autopilot.kill_throttle"/>
      <call_once fun="power_switch_set(true)"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
    </block>
    <block name="Holding point">
      <set value="1" var="autopilot.kill_throttle"/>
      <attitude roll="0" throttle="0" vmode="throttle"/>
    </block>
    <block group="home" key="t" name="Takeoff" strip_button="Takeoff (wp CLIMB)" strip_icon="takeoff.png">
      <exception cond="GetPosAlt() @GT GetAltRef()+20" deroute="Endurance"/>
      <set value="0" var="autopilot.kill_throttle"/>
      <set value="0" var="autopilot.flight_time"/>
      <go from="HOME" pitch="30" throttle="0.8" vmode="throttle" wp="CLIMB"/>
      <deroute block="Endurance"/>
    </block>
    <block group="home" key="Ctrl+a" name="Standby" strip_button="Standby" strip_icon="home.png">
      <circle radius="nav_radius" wp="STDBY"/>
    </block>
    <block name="Endurance" strip_button="Endurance" group="mission">
      <set var="mapping_shot" value="0"/>
      <oval p1="C2" p2="C3" radius="-WaypointDist(WP_C1,WP_C2)/2." until="nav_oval_count==3"/>
      <deroute block="ZamboniSurvey"/>
    </block>
    <!--block name="Align Zamboni">
      <circle radius="nav_radius" until="NavQdrCloseToAxis(WP_STDBY,WP_ZBC) @AND fabsf(GetPosAlt() - WaypointAlt(WP_ZBC)) @LT 10." wp="STDBY"/>
    </block-->
    <block group="mission" name="ZamboniSurvey" strip_button="Zamboni">
      <set var="mapping_shot" value="1"/>
      <call_once fun="pprzlink_cam_ctrl_set_expo(PPRZLINK_CAM_AUTO_EXPO)"/>
      <call_once fun="nav_survey_zamboni_setup(WP_ZBC, WP_ZBDIR, mapping_length, -mapping_sweep, mapping_lines, GetAltRef()+mapping_height)"/>
      <call fun="nav_survey_zamboni_run()"/>
      <deroute block="Land Left AF-TD"/>
    </block>
    <block group="land" name="Land Right AF-TD" strip_button="Land right (wp AF-TD)" strip_icon="land-right.png">
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block group="land" name="Land Left AF-TD" strip_button="Land left (wp AF-TD)" strip_icon="land-left.png">
      <set value="-DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block name="land">
      <call_once fun="nav_compute_baseleg(WP_AF, WP_TD, WP__BASELEG, nav_radius)"/>
      <circle radius="nav_radius" until="NavCircleCount() @GT 0.5" wp="_BASELEG"/>
      <circle radius="nav_radius" until="And(NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10), 10 @GT fabs(GetPosAlt() - WaypointAlt(WP__BASELEG)))" wp="_BASELEG"/>
    </block>
    <block name="final">
      <exception cond="GetAltRef() + 3 @GT GetPosAlt()" deroute="flare"/>
      <go from="AF" hmode="route" vmode="glide" wp="TD"/>
    </block>
    <block name="flare">
      <go exceeding_time="10" from="AF" hmode="route" throttle="0.0" vmode="throttle" wp="TD"/>
      <attitude roll="0.0" throttle="0.0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="EmergencyLanding">
      <go throttle="0." vmode="throttle" wp="HOME"/>
      <attitude roll="0" throttle="0" vmode="throttle"/>
    </block>
    <block name="SetExpo">
      <call_once fun="pprzlink_cam_ctrl_set_expo(PPRZLINK_CAM_AUTO_EXPO)"/>
      <return/>
    </block>
  </blocks>
</flight_plan>
