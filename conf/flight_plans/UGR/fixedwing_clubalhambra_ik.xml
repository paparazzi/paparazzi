<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan alt="750" geofence_max_alt="3000" geofence_max_height="1000" ground_alt="720" home_mode_height="200" lat0="37.29745306" lon0="-3.68272961" max_dist_from_home="1500" name="Sonic2" qfu="90" security_height="25">
 
  <header>
  </header>

  <waypoints>
    <waypoint name="HOME" alt="713" x="-0.648" y="-0.647"/>
    <waypoint name="CLIMB" alt="753" x="-77.375" y="-46.790"/>
    <!--waypoint name="AF" alt="730" x="-139.4" y="-55.5"/>
    <waypoint name="TD" alt="720" x="-10.4" y="-3.5"/-->

    <waypoint name="STDBY" lat="37.29826926318695" lon="-3.683916936727701"/>
    <waypoint name="ELL" lat="37.2997200" lon="-3.6868681"/>
    <waypoint name="P0" x="-44.1543" y="-30.2445"/>
    <waypoint name="P1" x="29.784" y="5.24597"/>
  </waypoints>
  
  <variables>
    <variable var="a_stb" init="90.0" min="1.0" max="150.0" step="1.0"/>
    <variable var="b_stb" init="90.0" min="1.0" max="150.0" step="1.0"/>
    <variable var="alpha_stb" init="0.0" min="0.0" max="180.0" step="1.0"/>
    <variable var="land_rad" init="50.0" min="1.0" max="150.0" step="1.0"/>
    <variable var="ell_delta" init="10.0" min="0.0" max="100.0" step="1.0" />
  </variables>
  
  <modules>
    <module name="gvf_classic">
      <define name="GVF_OCAML_GCS" value="FALSE"/>
  
        <define name="GVF_ELLIPSE_KE" value="1.2"/>
        <define name="GVF_ELLIPSE_KN" value="1.1"/>
    </module>

    <module name="gvf_ik">
      <define name="GVF_OCAML_GCS" value="FALSE"/>

      <define name="GVF_IK_GAMMA_AMPLITUDE" value=".3"/>
      <define name="GVF_IK_GAMMA_OMEGA" value=".6"/>

      <define name="GVF_IK_ELLIPSE_KE" value=".4"/>
      <define name="GVF_IK_ELLIPSE_KN" value="1"/>

      <define name="GVF_IK_LINE_KE" value=".4"/>
      <define name="GVF_IK_LINE_KN" value="1"/>
    </module>
  </modules>

  <!-- EXCEPTIONS ..................................................... -->

  <exceptions>
      <!-- Takeoff - Standby -->
    <exception cond="(IndexOfBlock('Takeoff') == nav_block) @AND
      (GetPosAlt() @GT (GetAltRef() + 30))" deroute="Standby"/>

      <!-- Block Time GT 300 -->
    <!--exception cond="!(IndexOfBlock('Standby') @GEQ nav_block) @AND
      (NavBlockTime() @GT 180)" deroute="Standby"/-->

      <!-- Bat Low  -->
    <!--exception cond="!(IndexOfBlock('Standby') @GEQ nav_block) @AND
      electrical.bat_critical" deroute="Standby"/-->

    <!-- RC lost && Block Time GT 300 -->
    <!--exception cond="!(IndexOfBlock('Standby') @GEQ nav_block) @AND
      (radio_control.status == RC_REALLY_LOST) @AND 
      (NavBlockTime() @GT 300)" deroute="Standby"/-->
  </exceptions>

  <!-- ................................................................ -->

  <blocks>

    <!-- ## INIT ## -->

    <block name="Wait GPS" strip_icon="gps.png">
      <set value="1" var="autopilot.kill_throttle"/>
      <while cond="!GpsFixValid()"/>
    </block>
    
    <block name="Geo init" strip_icon="googleearth.png">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <!--call_once fun="NavSetGroundReferenceHere()"/-->
    </block>
    
    <block name="Holding point">
      <set value="1" var="autopilot.kill_throttle"/>
      <attitude roll="0" throttle="0" vmode="throttle"/>
    </block>

    <!-- ## AUTO TAKEOFF ## -->
    
    <block name="Takeoff" strip_button="Takeoff (wp CLIMB)" strip_icon="takeoff.png">
      <set value="0" var="autopilot.kill_throttle"/>
      <set value="0" var="autopilot.flight_time"/>
      <set value="1" var="autopilot.launch"/> <!-- Just for simulation -->
      <go from="HOME" throttle="1.0" vmode="throttle" wp="CLIMB" pitch="25"/>
    </block>
    
    <block name="Standby" key="s" strip_button="Standby" strip_icon="home.png">
      <set var="flight_altitude" value="GetAltRef() + 50"/>
      <call_once fun="NavVerticalAutoThrottleMode(0.0)"/>
      <call_once fun="NavVerticalAltitudeMode(flight_altitude, 0.0)"/>
      <call fun="nav_gvf_ellipse_wp(WP_STDBY, a_stb, b_stb, alpha_stb)"/>
    </block>

    <!-- ## MISSION ## -->

    <block name="Ellipse ELL" strip_icon="oval.png">
      <call fun="nav_gvf_ellipse_wp(WP_ELL, gvf_ellipse_par.a, gvf_ellipse_par.b, gvf_ellipse_par.alpha)"/>
    </block>
    
    <block name="Ellipse IK ELL" strip_icon="oval.png">
      <call fun="nav_gvf_ik_ellipse_wp(WP_ELL, gvf_ik_ellipse_par.a, gvf_ik_ellipse_par.b, gvf_ik_ellipse_par.alpha)"/>
    </block>
    
    <block name="Segment IK P2-P3" strip_icon="line.png">
      <call fun="nav_gvf_ik_line_wp1_wp2(WP_P0, WP_P1)"/>
    </block>
    
    <!-- ## AUTO LANDING ## -->

    <!-- TODO: implement once it is ready -->

    <!-- ########################### -->
    
  </blocks>
</flight_plan>
