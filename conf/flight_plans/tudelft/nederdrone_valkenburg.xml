<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan alt="60" ground_alt="0" lat0="52.168595" lon0="4.412444" max_dist_from_home="5000" name="Nederdrone Valkenburg" security_height="2">
  <header>
    #include "autopilot.h"
    #include "subsystems/datalink/datalink.h"
</header>
  <waypoints>
    <waypoint name="HOME" x="12.6" y="-48.7"/>
    <waypoint name="CLIMB" x="62.6" y="-80.4"/>
    <waypoint name="STDBY" x="106.0" y="-55.1"/>
    <waypoint name="p1" x="322.0" y="-254.3"/>
    <waypoint name="p2" x="696.0" y="-148.1"/>
    <waypoint name="p3" x="600.4" y="73.4"/>
    <waypoint name="p4" x="238.6" y="-48.5"/>
    <waypoint name="TD" x="-4.1" y="-23.7"/>
    <waypoint name="FOLLOW" x="123.2" y="-87.8"/>
    <waypoint name="S1" lat="52.1669450" lon="4.4174372"/>
    <waypoint name="S2" lat="52.1689871" lon="4.4208804"/>
    <waypoint lat="52.169189" lon="4.410820" name="C1"/>
    <waypoint lat="52.168049" lon="4.406923" name="C2"/>
    <waypoint lat="52.166515" lon="4.408235" name="C3"/>
    <waypoint lat="52.163255" lon="4.407668" name="C4"/>
    <waypoint lat="52.161908" lon="4.410082" name="C5"/>
    <waypoint lat="52.162641" lon="4.416992" name="C6"/>
    <waypoint lat="52.164861" lon="4.427268" name="C7"/>
    <waypoint lat="52.170422" lon="4.427511" name="C8"/>
    <waypoint lat="52.172276" lon="4.424011" name="C9"/>
  </waypoints>
  <sectors>
    <sector color="red" name="Flyzone">
      <corner name="C1"/>
      <corner name="C2"/>
      <corner name="C3"/>
      <corner name="C4"/>
      <corner name="C5"/>
      <corner name="C6"/>
      <corner name="C7"/>
      <corner name="C8"/>
      <corner name="C9"/>
    </sector>
  </sectors>
  <modules>
    <!--module name="follow_me"/-->
    <module name="nav" type="survey_rectangle_rotorcraft">
      <define name="RECTANGLE_SURVEY_DEFAULT_SWEEP" value="100"/>
    </module>
  </modules>
  <exceptions>
    <exception cond="Or(!InsideFlyzone(GetPosX(), GetPosY()), GetPosAlt() > GetAltRef() + 1500) && !(nav_block == IndexOfBlock('Wait GPS')) && !(nav_block == IndexOfBlock('Geo init')) && !(nav_block == IndexOfBlock('Holding point'))" deroute="Holding point"/>
    <exception cond="datalink_time > 25 && !(nav_block == IndexOfBlock('Wait GPS')) && !(nav_block == IndexOfBlock('Geo init')) && !(nav_block == IndexOfBlock('Holding point')) && !(nav_block == IndexOfBlock('Standby'))" deroute="Standby"/>
  </exceptions>
  <blocks>
    <block name="Wait GPS">
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid() || !state.ned_initialized_i"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetAltitudeReferenceHere()"/>
    </block>
    <block name="Holding point">
      <call_once fun="NavKillThrottle()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="Start Engine">
      <set value="FALSE" var="force_forward"/>
      <call_once fun="NavResurrect()"/>
      <call_once fun="nav_set_heading_current()"/>
      <attitude pitch="-65" roll="0" throttle="0" until="stage_time>1" vmode="throttle"/>
    </block>
    <block name="TakeoffLow" strip_button="Takeoff" strip_icon="takeoff.png">
      <exception cond="stateGetPositionEnu_f()->z > 18.0" deroute="Takeoff"/>
      <call_once fun="nav_set_heading_current()"/>
      <attitude pitch="-45." roll="0" throttle="0.8" vmode="throttle"/>
    </block>
    <block name="Takeoff" strip_button="Takeoff" strip_icon="takeoff.png">
      <exception cond="stateGetPositionEnu_f()->z > 40.0" deroute="Standby"/>
      <call_once fun="nav_set_heading_current()"/>
      <call_once fun="NavSetWaypointHere(WP_CLIMB)"/>
      <stay climb="nav_climb_vspeed" vmode="climb" wp="CLIMB"/>
    </block>
    <!--block name="follow_module">
      <set value="FALSE" var="force_forward"/>
      <stay pre_call="follow_me_set_wp(WP_FOLLOW, 0)" wp="FOLLOW"/>
    </block>
    <block name="follow_module_diag">
      <set value="FALSE" var="force_forward"/>
      <stay pre_call="follow_me_set_wp(WP_FOLLOW, follow_me_diag_speed)" wp="FOLLOW"/>
    </block>
    <block name="follow_module_land">
      <set value="FALSE" var="force_forward"/>
      <stay climb="nav_descend_vspeed * 0.5" pre_call="follow_me_set_wp(WP_FOLLOW, follow_me_diag_speed*0.5)" vmode="climb" wp="FOLLOW"/>
    </block>
    <block name="follow_landed">
      <set value="FALSE" var="force_forward"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block-->
    <block name="Standby" strip_button="Standby" strip_icon="home.png">
      <set value="FALSE" var="force_forward"/>
      <stay wp="STDBY"/>
    </block>
    <block name="stay_p1">
      <set value="FALSE" var="force_forward"/>
      <stay wp="p1"/>
    </block>
    <block name="go_p2">
      <set value="TRUE" var="force_forward"/>
      <call_once fun="nav_set_heading_deg(90)"/>
      <go wp="p2"/>
      <deroute block="stay_p1"/>
    </block>
    <block name="line_p1_p2">
      <set value="TRUE" var="force_forward"/>
      <go from="p1" hmode="route" wp="p2"/>
      <stay until="stage_time>10" wp="p2"/>
      <go from="p2" hmode="route" wp="p1"/>
      <deroute block="line_p1_p2"/>
    </block>
    <block name="route">
      <set value="TRUE" var="force_forward"/>
      <go from="p1" hmode="route" wp="p2"/>
      <go from="p2" hmode="route" wp="p3"/>
      <go from="p3" hmode="route" wp="p4"/>
      <go from="p4" hmode="route" wp="p1"/>
      <deroute block="route"/>
    </block>

    <block group="extra_pattern" name="Survey S1-S2 25m NS" strip_button="Svy25-NS-PRIMITIVE">
      <set value="FALSE" var="force_forward"/>
      <survey_rectangle grid="30" orientation="NS" wp1="S1" wp2="S2"/>
    </block>
    <block group="extra_pattern" name="Survey S1-S2 NS" strip_button="Svy-NS" strip_icon="survey.png">
      <set value="TRUE" var="force_forward"/>
      <call_once fun="nav_survey_rectangle_rotorcraft_setup(WP_S1, WP_S2, sweep, NS)"/>
      <deroute block="Survey RECTANGLE RUN"/>
    </block>
    <block group="extra_pattern" name="Survey S1-S2 LO" strip_button="Svy-LO" strip_icon="survey_we.png">
      <set value="TRUE" var="force_forward"/>
      <call_once fun="nav_survey_rectangle_rotorcraft_setup(WP_S1, WP_S2, sweep, WE)"/>
      <deroute block="Survey RECTANGLE RUN"/>
    </block>
    <block group="extra_pattern" name="Survey RECTANGLE RUN" strip_button="Svy CONT">
      <set value="TRUE" var="force_forward"/>
      <exception cond="rectangle_survey_sweep_num > 1" deroute="Standby"/>
      <call fun="nav_survey_rectangle_rotorcraft_run(WP_S1, WP_S2)"/>
    </block>

    <block name="Oval">
      <set value="TRUE" var="force_forward"/>
      <oval p1="p1" p2="p2" radius="nav_radius"/>
    </block>
    <block name="land here" strip_button="Land Here" strip_icon="land-right.png">
      <set value="FALSE" var="force_forward"/>
      <call_once fun="NavSetWaypointHere(WP_TD)"/>
    </block>
    <block name="land">
      <set value="FALSE" var="force_forward"/>
      <go wp="TD"/>
    </block>
    <block name="descend">
      <set value="FALSE" var="force_forward"/>
      <exception cond="LessThan(stateGetPositionEnu_f()->z, 15.0)" deroute="flare"/>
      <stay climb="nav_descend_vspeed" vmode="climb" wp="TD"/>
    </block>
    <block name="flare">
      <set value="FALSE" var="force_forward"/>
      <stay climb="-0.5" vmode="climb" wp="TD"/>
    </block>
    <block name="landed">
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>