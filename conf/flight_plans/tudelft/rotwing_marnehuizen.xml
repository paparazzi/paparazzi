<?xml version="1.0"?>
<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">
<flight_plan alt="110" ground_alt="0" lat0="53.383009" lon0="6.269968" max_dist_from_home="4000" name="Rotating Wing Valkenburg" security_height="2">
  <header/>
  <waypoints>
    <waypoint name="HOME" x="0" y="0"/>
    <waypoint name="CLIMB" x="300." y="70"/>
    <waypoint name="STDBY" x="-44.938" y="78.183"/>
    <waypoint name="p1" x="-210.22" y="163.937"/>
    <waypoint name="p2" x="-165.862" y="863.765"/>
    <waypoint name="p3" x="517.462" y="837.787"/>
    <waypoint name="p4" x="481.728" y="117.868"/>
    <waypoint name="circ" x="-100" y="500"/>
    <waypoint name="TD" x="10" y="-1"/>
    <waypoint name="APP" x="70" y="-25"/>
    <waypoint name="FOLLOW" x="300" y="80"/>
    <!-- Geofence -->
    <waypoint lat="53.3813" lon="6.24491" name="C1"/>
    <waypoint lat="53.3844" lon="6.24466" name="C2"/>
    <waypoint lat="53.4076" lon="6.2359" name="C3"/>
    <waypoint lat="53.4103" lon="6.25684" name="C4"/>
    <waypoint lat="53.3946" lon="6.29501" name="C5"/>
    <waypoint lat="53.3894" lon="6.28742" name="C6"/>
    <waypoint lat="53.3793" lon="6.28197" name="C7"/>
    <waypoint lat="53.3693" lon="6.2722" name="C8"/>
    <waypoint lat="53.3701" lon="6.24525" name="C9"/>
  </waypoints>
  <sectors>
    <sector color="red" name="Flyzone">
      <corner name="C1"/>
      <corner name="C2"/>
      <corner name="C3"/>
      <corner name="C4"/>
      <corner name="C5"/>
      <corner name="C6"/>
      <corner name="C7"/>
      <corner name="C8"/>
      <corner name="C9"/>
    </sector>
  </sectors>
  <variables>
    <variable var="liftoff_pitch"/>
    <variable var="liftoff_roll"/>
    <variable var="stage_timer_msec"/>
  </variables>
  <modules>
    <module name="follow_me">
      <define name="FOLLOW_ME_MOVING_WPS" value="WP_FOLLOW"/>
    </module>
  </modules>
  <exceptions>
    <exception cond="Or(!InsideFlyzone(GetPosX(), GetPosY()), GetPosHeight() @GT 1500) @AND !(nav_block == IndexOfBlock('Wait GPS')) @AND !(nav_block == IndexOfBlock('Geo init')) @AND !(nav_block == IndexOfBlock('Holding point'))" deroute="Holding point"/>
    <exception cond="datalink_time @GT 25 @AND !(nav_block == IndexOfBlock('Wait GPS')) @AND !(nav_block == IndexOfBlock('Geo init')) @AND !(nav_block == IndexOfBlock('Holding point')) @AND !(nav_block == IndexOfBlock('Standby'))" deroute="Standby"/>
  </exceptions>
  <blocks>
   <block name="Wait GPS">
      <call_once fun="rotwing_state_set(ROTWING_STATE_FORCE_HOVER)"/>
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid() || !state.ned_initialized_i"/>
    </block>
    <block name="Geo init">
      <call_once fun="rotwing_state_set(ROTWING_STATE_FORCE_HOVER)"/>
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetAltitudeReferenceHere()"/>
    </block>
    <block name="Holding point">
      <call_once fun="rotwing_state_set(ROTWING_STATE_FORCE_HOVER)"/>
      <call_once fun="NavKillThrottle()"/>
      <set var="stabilization.cmd[COMMAND_THRUST_X]" value="0"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="Start Engine" strip_button="Start Engines" strip_icon="on.png">
        <exception cond="stage_time > 10" deroute="Holding point"/>
        <call_once fun="rotwing_state_set(ROTWING_STATE_FORCE_HOVER)"/>
        <call_once fun="nav_set_heading_current()"/>
        <call_once fun="NavResurrect()"/>
        <attitude pitch="DegOfRad(stateGetNedToBodyEulers_f()->theta)" roll="DegOfRad(stateGetNedToBodyEulers_f()->phi)" throttle="0" until="rotwing_state_hover_motors_running()" vmode="throttle"/>
    </block>
    <block name="Wait takeoff">
      <call_once fun="rotwing_state_set(ROTWING_STATE_FORCE_HOVER)"/>
      <exception cond="stage_time > 10" deroute="Holding point"/>
      <attitude pitch="DegOfRad(stateGetNedToBodyEulers_f()->theta)" roll="DegOfRad(stateGetNedToBodyEulers_f()->phi)" throttle="0.2" until="(fabs(DegOfRad(stateGetNedToBodyEulers_f()->theta)) @LT 3.0) @AND (fabs(DegOfRad(stateGetNedToBodyEulers_f()->phi)) @LT 3.0) @AND (stage_time > 2)" vmode="throttle"/>
    </block>
    <block name="Takeoff" strip_button="Takeoff" strip_icon="takeoff.png">
        <call_once fun="rotwing_state_set(ROTWING_STATE_FORCE_HOVER)"/>
        <exception cond="agl_dist_valid @AND (agl_dist_value @GT 1.0)" deroute="Climb"/>
        <call_once fun="NavSetWaypointHere(WP_CLIMB)"/>
        <set var="stage_timer_msec" value="get_sys_time_msec()"/>
        <set var="liftoff_roll" value="DegOfRad(stateGetNedToBodyEulers_f()->phi)"/>
        <set var="liftoff_pitch" value="DegOfRad(stateGetNedToBodyEulers_f()->theta)"/>
        <attitude pitch="liftoff_pitch" roll="liftoff_roll" throttle="0.75" until="(get_sys_time_msec()-stage_timer_msec)>250" vmode="throttle"/>
        <call_once fun="autopilot_set_in_flight(true)"/><!-- this is a hack to solve INDI not being active fast enough -->

        <call_once fun="NavSetWaypointHere(WP_CLIMB)"/>
        <attitude pitch="0" roll="0" throttle="0.75" until="stage_time>3" vmode="throttle"/>
    </block>
    <block name="Climb">
      <exception cond="GetPosHeight() @GT 20.0" deroute="Standby"/>
      <call_once fun="rotwing_state_set(ROTWING_STATE_FORCE_HOVER)"/>
      <call_once fun="nav_set_heading_current()"/>
      <stay climb="nav.climb_vspeed" vmode="climb" wp="CLIMB"/>
    </block>
    <block name="Standby" strip_button="Standby" strip_icon="home.png">
        <call_once fun="rotwing_state_set(ROTWING_STATE_REQUEST_HOVER)"/>
        <stay wp="STDBY"/>
    </block>
    <block name="Standby_free">
        <call_once fun="rotwing_state_set(ROTWING_STATE_FREE)"/>
        <stay wp="STDBY"/>
    </block>
    <block name="stay_p1" strip_button="Stay P1" strip_icon="wp_quad.png">
        <call_once fun="rotwing_state_set(ROTWING_STATE_REQUEST_HOVER)"/>
        <stay wp="p1"/>
    </block>
    <block name="stay_p2">
        <call_once fun="rotwing_state_set(ROTWING_STATE_REQUEST_HOVER)"/>
        <stay wp="p2"/>
    </block>
    <block name="p1_p2">
        <call_once fun="rotwing_state_set(ROTWING_STATE_REQUEST_HOVER)"/>
        <go wp="p1"/>
        <stay until="stage_time>5" wp="p1"/>
        <go wp="p2"/>
        <stay until="stage_time>5" wp="p2"/>
        <deroute block="p1_p2"/>
    </block>
    <block name="Circle_CW_fwd" strip_button="CircleRight" strip_icon="circle-right.png">
      <call_once fun="rotwing_state_set(ROTWING_STATE_REQUEST_FW)"/>
      <circle radius="nav.radius" wp="circ"/>
    </block>
    <block name="Circle_CCW_fwd" strip_button="CircleLeft" strip_icon="circle-left.png">
      <call_once fun="rotwing_state_set(ROTWING_STATE_REQUEST_FW)"/>
      <circle radius="-nav.radius" wp="circ"/>
    </block>
    <block name="Circle_CW_hybrid" strip_icon="circle-right.png">
      <call_once fun="rotwing_state_set(ROTWING_STATE_REQUEST_FW)"/>
      <circle radius="nav.radius" wp="circ"/>
    </block>
    <block name="Circle_CCW_hybrid" strip_icon="circle-left.png">
      <call_once fun="rotwing_state_set(ROTWING_STATE_REQUEST_FW)"/>
      <circle radius="-nav.radius" wp="circ"/>
    </block>
    <block name="Approach APP">
      <call_once fun="rotwing_state_set(ROTWING_STATE_REQUEST_HOVER)"/>
      <stay alt="WaypointAlt(WP_APP)" pre_call="approach_moving_target_enable(WP_APP)" wp="APP"/>
    </block>
    <block name="Transition_quad" strip_button="Transition Quad" strip_icon="wp_quad.png">
      <call_once fun="rotwing_state_set(ROTWING_STATE_FREE)"/>
      <go wp="STDBY"/>
      <deroute block="Standby"/>
    </block>
    <block name="land here">
        <call_once fun="rotwing_state_set(ROTWING_STATE_REQUEST_HOVER)"/>
        <call_once fun="NavSetWaypointHere(WP_TD)"/>
    </block>
    <block name="land" strip_button="Land" strip_icon="land-right.png">
        <call_once fun="rotwing_state_set(ROTWING_STATE_REQUEST_HOVER)"/>
        <go wp="TD"/>
    </block>
    <block name="descend" strip_button="Descend" strip_icon="descend.png">
        <call_once fun="rotwing_state_set(ROTWING_STATE_REQUEST_HOVER)"/>
        <exception cond="GetPosHeight() @LT 12.0" deroute="flare"/>
        <stay climb="-1.0" vmode="climb" wp="TD"/>
    </block>
    <block name="flare">
        <call_once fun="rotwing_state_set(ROTWING_STATE_FORCE_HOVER)"/>
        <stay climb="-0.5" vmode="climb" wp="TD"/>
        <!--<exception cond="!(GetPosHeight() @LT 2.0)" deroute="flare_low"/>-->
        <exception cond="agl_dist_valid @AND (agl_dist_value @LT 0.28)" deroute="flare_low"/>
    </block>
    <block name="flare_low">
        <call_once fun="rotwing_state_set(ROTWING_STATE_FORCE_HOVER)"/>
        <exception cond="NavDetectGround()" deroute="Holding point"/>
        <exception cond="!nav_is_in_flight()" deroute="Holding point"/>
        <exception cond="ground_detect()" deroute="Holding point"/>
        <call_once fun="NavStartDetectGround()"/>
        <stay climb="-0.5" vmode="climb" wp="TD"/>
    </block>
    <block name="landed">
        <call_once fun="rotwing_state_set(ROTWING_STATE_FORCE_HOVER)"/>
        <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>
