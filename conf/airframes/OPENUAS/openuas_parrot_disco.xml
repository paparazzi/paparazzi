<!DOCTYPE airframe SYSTEM "../airframe.dtd">
<airframe name="Disco">
 <description>
* in Fixedwing (https://www.openuas.org/airframes/)
+ Airframe to validate all onboard functionally...
  Parrot Disco
     + Autopilot:   Parrot C.H.U.C.K.
     + Actuators:   Default Discon servos
     + GPS:         Default uBlox M8N GNSS
     + RC RX:       Spektrum DSMX RX620R Receiver with SBUS out
     + AIRSPEED:      Default
     + TELEMETRY:     Default Wifi
     + CURRENT:       ? V/I sensor?

 NOTES:
     + The first config will mimic the Exact Parrot Flight Envelope
       Later on the maximum performance option will be added
       and different setting if 5200mAh (heavier) battery is used (330g)
     + There will be a flightplan mimicing exact default behaviour of Parrot assisted flight
       (Or better, create one for the PPRZ team and make everyone happy)
     + WARNING: This config is NOT tested in flight and NOT tuned yet
     + Testing with Firmware v1.4.1 (and v1.3.0 before)
     + Using Enahanced Total Energy control as control loop in Final AC
     + Flashing the firmware via WiFi or USB
     + Enlarged Battery Bay to fir a 5200 mAh 3S battery
       This makes the airframe heavier, in the end we'll use adaptive etecs
     + Regular Telemetry is possible via USB to FTDI serial to Modem

     If testing "Classic" (as in not ETECS..) make sure to disable the settings/estimation/ac_char
     Set the define  USE_AIRSPEED  should be set to FALSE for the first without airspeed in loop tests
     Use also flightplan Versatile if no airspeed sensor is ues and use
     flightplan versatile_airspeed only with enabled airspeed sensor

     FIXME magneto 90Deg off in X/Y
 </description>
  <firmware name="fixedwing">
     <!-- ********************** For in the real flying hardware ********************-->
    <target name="ap" board="disco">

        <!-- Front Camera parameters -->
        <define name="H264_ROTATE" value="TRUE" />
        <define name="MT9F002_INITIAL_OFFSET_X" value="416+2704-480" /> <!-- 480 / 960 / 1920 / 3840 (horion for theta = 0 -> 2704) -->
        <define name="MT9F002_INITIAL_OFFSET_Y" value="1680-1040" /> <!-- 420 / 840 / 1680 / 3360 -->
        <define name="MT9F002_SENSOR_WIDTH" value="2*480" /> <!-- 480 / 960 / 1920 / 3840 -->
        <define name="MT9F002_SENSOR_HEIGHT" value="2*1040" /> <!-- 420 / 840 / 1680 / 3360 -->
        <define name="MT9F002_OUTPUT_WIDTH" value="240" /> <!-- 480 / 960 / 1920 / 3840 -->
        <define name="MT9F002_OUTPUT_HEIGHT" value="520" /> <!-- 420 / 840 / 1680 / 3360 -->
        <define name="MT9F002_TARGET_FPS" value="30" />
        <define name="MT9F002_TARGET_EXPOSURE" value="4" />
        <define name="MT9F002_GAIN_GREEN1" value="8.0" />
        <define name="MT9F002_GAIN_GREEN2" value="8.0" />
        <define name="MT9F002_GAIN_RED" value="8.0" />
        <define name="MT9F002_GAIN_BLUE" value="8.0" />

      <module name="radio_control" type="sbus"/>

      <!-- <configure name="CPU_LED" value="1"/>--> <!-- TODO: Fixme -->
      <!-- PERIODIC_FREQUENCY should be least equal or greater than AHRS_PROPAGATE_FREQUENCY -->
      <configure name="PERIODIC_FREQUENCY" value="512"/> <!--  unit="Hz" -->

      <define name="DISCO_GYRO_RANGE" value="MPU60X0_GYRO_RANGE_1000"/><!-- Test if lower is better -->
      <define name="DISCO_ACCEL_RANGE" value="MPU60X0_ACCEL_RANGE_8G"/><!-- Test if 4g is OK -->
      <define name="DISCO_LOWPASS_FILTER" value="MPU60X0_DLPF_256HZ"/><!--  -->
      <define name="DISCO_SMPLRT_DIV" value="3"/> <!-- TODO determine best value for 512 HZ loop -->

      <configure name="AHRS_PROPAGATE_FREQUENCY" value="500"/><!--  unit="Hz" -->
      <configure name="AHRS_CORRECT_FREQUENCY" value="500"/> <!--  unit="Hz" -->

      <configure name="NAVIGATION_FREQUENCY" value="16"/> <!--  unit="Hz" -->
      <configure name="CONTROL_FREQUENCY" value="120"/> <!--  unit="Hz" -->
      <configure name="TELEMETRY_FREQUENCY" value="60"/> <!--  unit="Hz" -->
      <configure name="MODULES_FREQUENCY" value="512"/> <!--  unit="Hz" -->

      <module name="imu" type="disco"/>
      <module name="actuators" type="disco"/>
      <module name="sonar_bebop">
        <define name="USE_SONAR"/>
        <define name="SENSOR_SYNC_SEND_SONAR"/>
      </module>

      <module name="airspeed" type="ms45xx_i2c">
        <define name="MS45XX_I2C_DEV" value="i2c1"/>
        <define name="MS45XX_PRESSURE_RANVE" value="0.05"/>
        <define name="AIRSPEED_SYNC_SEND"/><!-- TODO Disable after debbuging test flights are finiahed-->
      </module>

      <!--  <module name="radio_control" type="spektrum"> -->
        <!-- <define name="RADIO_CONTROL_NB_CHANNEL" value="9"/> -->

        <!-- Mode set one a three way switch -->
       <!--  Per defaulr already GEAR if not defined  <define name="RADIO_MODE" value="RADIO_GEAR"/> --><!-- yes, already done by default if not redefined to something else-->
        <!-- <define name="RADIO_GEAR" value="RADIO_AUX1"/> -->
        <!-- <define name="RADIO_FLAP" value="RADIO_AUX2"/> -->
        <!-- <define name="SPEKTRUM_HAS_SOFT_BIND_PIN" value="1"/> -->
        <!-- <define name="RADIO_CONTROL_SPEKTRUM_NO_SIGN" value="1"/> -->
        <!-- <define name="RADIO_TRANSMITTER_ID" value="-883171243"/> -->   <!-- TX2 : 0xCB5BE055 -883171243 -->
              <!-- If you want to reverse a channel change the sign of the channel you want to reverse -->
        <!-- <define name="RADIO_CONTROL_SPEKTRUM_SIGNS" value="\{1,-1,-1,-1,1,-1,1,1,1,1,1,1\}"/> -->
      <!--  </module>-->

       <!-- <module name="spektrum_soft_bind"/> TODO: Not working yet -->

       <!-- Not of use in sim so here-->
       <module name="tune_airspeed"/><!--  TODO: Disable after final tuning -->
       <module name="sys_mon"/><!-- Disable after  final tuning --> <!-- Check processor load for higher loop, nav, module etc. frequencies -->
       <!--  <module name="mag_calib_ukf"/> Not used yet -->

       <!-- Used for writing debug values can be disable when all is done -->
       <!-- NOT working in sim (Yet, feel free to fix... , so in this AP target only-->
       <module name="logger_file">
       <define name="FILE_LOGGER_PATH" value="/data/ftp/internal_000"/>
    </module>

    </target>

<!-- *********************** For simulation of the flight ****************************-->
    <target name="sim" board="pc">
      <!--  <define name="RADIO_CONTROL_NB_CHANNEL" value="9"/> -->
      <!--<define name="INS_BARO_ID" value="BARO_SIM_SENDER_ID"/>-->
      <configure name="AHRS_PROPAGATE_FREQUENCY" value="500"/><!--  unit="Hz" -->

      <module name="radio_control" type="spektrum">
      </module>
      <!--  module name="telemetry"     type="transparent"/>-->
      <!--<module name="imu" type="aspirin_v2.2"/>-->
      <!--<module name="baro_sim"/>-->

      <!-- For various parameter info here  https://wiki.paparazziuav.org/wiki/Subsystem/ahrs -->
      <!--<module name="ahrs" type="int_cmpl_quat">
      </module>-->
      <!--<module name="uart"/>--><!-- TODO Exteral HITL PC debugging e.g a photocam trigger etc -->
    </target>

<!-- *********************** Another way for simulation of the flight ****************************-->
    <!-- <target name="jsbsim" board="pc"> -->
      <!-- Note NPS needs the ppm type radio_control module -->
      <!--
      <module name="radio_control" type="ppm">
      <module name="fdm" type="jsbsim"/>
      <module name="udp"/>
      -->
    <!-- </target>-->

    <!-- <target name="yasim" board="pc"> -->
      <!-- Note NPS needs the ppm type radio_control module -->
      <!--
      <module name="radio_control" type="ppm">
      <module name="fdm" type="yasim"/>
      <module name="udp"/>
      -->
     <!-- </target> -->

<!-- ********** Common Defines and Config and values for both Real Hardware and Simulation ***** -->

    <!--<define name="RADIO_CONTROL_NB_CHANNEL" value="7"/>-->

    <!--  <define name="USE_AIRSPEED"/> -->

    <define name="AGR_CLIMB"/> <!--Has AGR mode for testing performance -->
    <define name="TUNE_AGRESSIVE_CLIMB"/>
    <define name="STRONG_WIND"/>
    <define name="WIND_INFO"/>
    <define name="WIND_INFO_RET"/>

    <define name="autopilot_motors_on" value="TRUE"/>
    <!-- temp fix for geomag, normally only used for rotorcraft -->
    <define name="SENSOR_SYNC_SEND"/>

    <!-- <configure name="USE_BARO_BOARD" value="FALSE"/>--> <!-- TODO Testfly-->
    <!-- amount of time it take for the bat to trigger check -->
    <!-- to avoid bat low spike detection when strong pullup withch draws short sudden power-->
    <!--  TODO specificaly test for Disco seev if needed or which value -->
    <define name="BAT_CHECKER_DELAY" value="60" unit="s/10"/> <!-- in tenth of seconds-->

    <!-- Only one main battery so CATASTROPHIC_BATTERY kill should be somewhat delayed -->
    <define name="CATASTROPHIC_BATTERY_KILL_DELAY" value="400" unit="s/10"/> <!-- in tenth of seconds for engine kill -->

    <define name="AHRS_TRIGGERED_ATTITUDE_LOOP"/>
    <define name="USE_AHRS_GPS_ACCELERATIONS" value="TRUE"/>
    <define name="USE_MAGNETOMETER_ONGROUND" value="TRUE"/>

    <!--  <configure name="USE_MAGNETOMETER" value="FALSE"/> --> <!-- TODO CHECK= if it is same as AHRS_USE_MAGNETOMETER -->

    <!-- <module name="ahrs" type="float_dcm"/> WAS from other Disco -->
    <module name="ahrs" type="float_cmpl_quat">
        <configure name="AHRS_USE_MAGNETOMETER" value="FALSE"/> <!-- First autoflight set to false better make sure it works and is callibrated if set to TRUE -->
        <configure name="AHRS_ALIGNER_LED" value="2"/><!-- TODO: Which color? -->
        <define name="AHRS_MAG_UPDATE_ALL_AXES" value="FALSE"/> <!-- if TRUE with those high roll n pith angles magneto should be calibrated well -->
        <!--  TRUE by default <define name="AHRS_USE_GPS_HEADING" value="FALSE"/> --><!-- Use GPS course to update heading for time being,if FALSE data from magneto only, testing, brrrr... -->
        <!--  TRUE by default <define name="AHRS_GRAVITY_UPDATE_COORDINATED_TURN" value="FALSE"/>--> <!-- Compensation of centrifugal force via GPS speed (to fly in circles with a fixedwing)"-->
        <define name="AHRS_GPS_SPEED_IN_NEGATIVE_Z_DIRECTION" value="FALSE"/> <!-- AHRS_GRAVITY_UPDATE_COORDINATED_TURN assumes the GPS speed is in the X axis direction. Quadshot, DelftaCopter and other hybrids can have the GPS speed in the negative Z direction" -->
        <define name="AHRS_PROPAGATE_LOW_PASS_RATES" value="FALSE"/> <!-- apply a low pass filter on rotational velocity"-->
        <define name="AHRS_BIAS_UPDATE_HEADING_THRESHOLD" value="5.0" unit="deg"/> <!-- don't update gyro bias if heading deviation is above this threshold in degrees"-->
        <define name="AHRS_HEADING_UPDATE_GPS_MIN_SPEED" value="3.0" unit="m/s"/> <!-- CAREFULL,  Don't update heading from GPS course if GPS ground speed is below is this threshold in m/s" -->
  <!-- Some insights https://lists.nongnu.org/archive/html/paparazzi-devel/2013-10/msg00126.html -->
        <define name="AHRS_GRAVITY_HEURISTIC_FACTOR" value="20.0"/> <!-- TODO determine Default is 30. Reduce accelerometer cut-off frequency when the vehicle is accelerating: norm(ax,ay,az) 9,81 m/s2. WARNING: when the IMU is not well damped, the norm of accelerometers never equals to 9,81 m/s2. As a result, the GRAVITY_HEURISTIC_FACTOR will reduce the accelerometer bandwith even if the vehicle is not accelerating. Set to 0 in case of vibrations -->

        <!-- <define name="AHRS_ICQ_IMU_ID" value="ABI_BROADCAST"/>--> <!-- ABI sender id of IMU to use -->
    </module>

    <module name="ins" type="alt_float"/>  <!--DOES not work in Sim: extended thusd use alt_float"/> -->

    <!-- For easier on desk testing transparent_usb, else transparent -->
    <!-- <module name="telemetry" type="transparent_usb"/>--> <!-- FIXME: gives compile error -->

    <!-- E.g a Si1000 based moden via FTDI cable on USB  TODO see which UART port and test it-->
    <!-- <module name="telemetry" type="transparent"> -->
    <!-- <configure name="MODEM_PORT" value="UART2"/>
       <configure name="MODEM_BAUD" value="B57600"/> -->
    <!-- </module> -->
    <module name="telemetry" type="transparent_udp"/>

    <module name="control" type="new"/> <!-- type="energy"/>--> <!-- ETECS Disabled for first tuning testflight -->
    <module name="navigation"/>
    <module name="gps" type="ublox">
      <!-- <configure name="GPS_BAUD" value="B57600"/> --><!-- TODO find optimal settings -->
    </module>

  </firmware>

<!-- ************************* MODULES ************************* -->
   <modules>
    <module name="send_imu_mag_current"/> <!-- disable after one time callibration quite the same for all Discos-->

    <!-- QNH -->
    <module name="air_data">
     <define name="CALC_AIRSPEED" value="TRUE" />
     <define name="CALC_TAS_FACTOR" value="FALSE" />
     <define name="CALC_AMSL_BARO" value="TRUE" />
    </module>

    <module name="geo_mag"/>

    <module name="nav" type="line"/>
    <module name="nav" type="line_border"/>
    <module name="nav" type="line_osam"/>
    <module name="nav" type="survey_polygon">
      <define name="POLYSURVEY_DEFAULT_DISTANCE" value="40" unit="m"/>
    </module>
    <module name="nav" type="survey_poly_osam"/>
    <module name="nav" type="smooth"/>
    <module name="nav" type="vertical_raster"/>
    <module name="nav" type="flower"/>

    <!-- <module name="nav" type="bungee_takeoff"/> -->
    <!-- module name="nav" type="catapult"/> --><!-- TODO Switch it on later after first flights -->

    <!-- <module name="gps" type="ubx_ucenter"/>-->
    <!-- This GPS is a REAL ublox M8N, so setting can be saved, no need for ubx_ucenter one has can set it oneself since we have all kinds of nift Galilleio setting we rather keep that -->

    <module name="video_thread"/>

    <module name="video_capture">
     <define name="VIDEO_CAPTURE_CAMERA" value="bottom_camera"/>
    </module>

    <!--  NOT ready for Fixedwing primetime... need fixing
    <module name="cv_blob_locator">
     <define name="BLOB_LOCATOR_CAMERA" value="bottom_camera"/>
    </module>-->

    <module name="video_rtp_stream">
     <define name="VIEWVIDEO_CAMERA" value="bottom_camera"/>
      <define name="VIEWVIDEO_QUALITY_FACTOR" value="50"/>
      <define name="VIEWVIDEO_DOWNSIZE_FACTOR" value="1"/>
    </module>

    <!--<module name="video_exif"/>-->

    <module name="digital_cam_video">
      <define name="DC_AUTOSHOOT_DISTANCE_INTERVAL" value="5.0" unit="s"/>
    </module>

  </modules>

  <!-- ************************* ACTUATORS ************************* -->
  <servos>
   <servo name="S_THROTTLE" no="0" min="1000" neutral="1100" max="12500"/>
   <servo name="S_AILEVON_LEFT" no="1" min="1100" neutral="1500" max="1900"/>
   <servo name="S_AILEVON_RIGHT" no="6" min="1900" neutral="1500" max="1100"/>
  </servos>

  <!--For mixed controls -->
  <section name="MIXER">
   <define name="AILEVON_AILERON_RATE" value="0.75"/>
   <define name="AILEVON_ELEVATOR_RATE" value="0.75"/>
  </section>

  <!-- ************************ RC COMMANDS ***************************** -->
  <rc_commands>
   <set command="THROTTLE" value="@THROTTLE"/>
   <set command="ROLL" value="@ROLL"/>
   <set command="PITCH" value="@PITCH"/>
   <set command="YAW" value="@YAW"/><!-- no rudder but diff mixing like yaw possible -->
   <!-- for tuning via RC these ones below -->
   <!--
   <set command="GAIN1"    value="@GAIN1"/>
   <set command="CALIB"    value="@CALIB"/>
   -->
  </rc_commands>

  <!-- ************************ AUTO RC COMMANDS ***************************** -->
  <!--  <auto_rc_commands>  -->
   <!-- To be able to set gain values via RC Transmitter these ones below.
   This way the can keep his eye on a fast moving plane and set somegain values
   makes life of a single testpiloted AC much easier -->
   <!--
   <set command="GAIN1"    value="@GAIN1"/>
   <set command="CALIB"    value="@CALIB"/> -->
  <!--  </auto_rc_commands>-->

  <!-- ************************ COMMANDS ***************************** -->
  <commands>
   <axis name="THROTTLE" failsafe_value="0"/>
   <axis name="ROLL" failsafe_value="5"/>
   <axis name="PITCH" failsafe_value="-6"/>
   <axis name="YAW" failsafe_value="0"/>
  </commands>

  <!-- ************************ COMMAND LAWS ***************************** -->
  <command_laws>
   <let var="aileron" value="@ROLL  * AILEVON_AILERON_RATE"/>
   <let var="elevator" value="@PITCH * AILEVON_ELEVATOR_RATE"/>
   <set servo="S_THROTTLE" value="@THROTTLE"/>
   <set servo="S_AILEVON_LEFT" value="$elevator - $aileron"/>
   <set servo="S_AILEVON_RIGHT" value="$elevator + $aileron"/>
  </command_laws>

  <!-- ************************ AUTO1 ***************************** -->
  <!-- Do not set MAX_ROLL, MAX_PITCH to small of a value, otherwise one can NOT control the plane very well manually -->
  <!-- If you have dual rate swith it of with same swtch as mode switch thus auto1 means dualrate is switched off also -->
  <section name="AUTO1" prefix="AUTO1_">
   <define name="MAX_ROLL" value="48" unit="deg"/> <!-- more autority while testflying for first time -->
   <define name="MAX_PITCH" value="34" unit="deg"/> <!-- more autority while testflying for first time -->
  </section>

  <!-- ************************ TRIM ***************************** -->
  <section name="TRIM" prefix="COMMAND_">
   <define name="ROLL_TRIM" value="0.0"/>
   <define name="PITCH_TRIM" value="0.0"/>
  </section>

  <!-- ************************ FAILSAFE ***************************** -->
  <!-- Strategy for failsave is slow wide circles and loosing height in a controlled fashion -->
  <section name="FAILSAFE" prefix="FAILSAFE_">
   <define name="DEFAULT_THROTTLE" value="0.0" unit="%"/>
   <define name="DEFAULT_ROLL" value="15.0" unit="deg"/>
   <define name="DEFAULT_PITCH" value="-20.0" unit="deg"/>
   <define name="DELAY_WITHOUT_GPS" value="4" unit="s"/>
  </section>

  <!-- ************************* IMU ************************* -->

  <section name="IMU" prefix="IMU_"> <!-- TODO -->
    <!-- ***************** MAGNETO *****************-->
    <!-- replace this with your own calibration (on the correct sensor?) -->
    <!-- TODO: Calibrate -->

    <define name="ACCEL_X_NEUTRAL" value="0"/>
    <define name="ACCEL_Y_NEUTRAL" value="0"/>
    <define name="ACCEL_Z_NEUTRAL" value="0"/>

    <!-- TODO thev current SENS -->
<!--  Scale Range
AFS_SEL=0 ±2g
AFS_SEL=1 ±4g
AFS_SEL=2 ±8g
AFS_SEL=3 ±16g

ADC Word Length Output in two’s complement format 16 bits

Sensitivity Scale Factor
AFS_SEL=0 16,384 LSB/g
AFS_SEL=1 8,192 LSB/g
AFS_SEL=2 4,096 LSB/g
AFS_SEL=3 2,048 LSB/g-->

   <!--  <define name="ACCEL_X_SENS" value="2.43116617606" integer="16"/>
    <define name="ACCEL_Y_SENS" value="2.46264528353" integer="16"/>
    <define name="ACCEL_Z_SENS" value="2.41899590699" integer="16"/>-->


    <!--define name="MAG_OFFSET" value="-?.0" unit="deg"--> <!--  TODO: at least 3 axis in worst case -->
    <define name="MAG_X_NEUTRAL" value="-164"/>
    <define name="MAG_Y_NEUTRAL" value="-244"/>
    <define name="MAG_Z_NEUTRAL" value="-590"/>
    <define name="MAG_X_SENS" value="7.76268606256" integer="16"/>
    <define name="MAG_Y_SENS" value="7.53777959342" integer="16"/>
    <define name="MAG_Z_SENS" value="8.13033580043" integer="16"/>

    <define name="BODY_TO_IMU_PHI" value="0.0" unit="deg"/>
    <define name="BODY_TO_IMU_THETA" value="0.0" unit="deg"/>
    <define name="BODY_TO_IMU_PSI" value="0.0" unit="deg"/>
  </section>

  <!-- ************************* AHRS ************************* -->
  <section name="AHRS" prefix="AHRS_">
    <!-- values used if no GPS fix, on 3D fix is update by geo_mag module -->
    <!-- NL -->
    <!--TODO: start using geo_mag module, else replace the values with your local magnetic field -->
    <!-- Local Magnetic field NL Testfield-->
    <!--
     <define name="H_X" value="0.382478"/>
     <define name="H_Y" value="0.00563406"/>
     <define name="H_Z" value="0.923948"/>
    -->
    <!-- Local Magnetic field DE Testfield -->
    <define name="H_X" value="0.412814"/>
    <define name="H_Y" value="-0.0228189"/>
    <define name="H_Z" value="0.91053"/>
  </section>

  <!-- ************************* INS ************************* -->
  <section name="INS">
    <!--  For those super precice target landings ;) -->
    <define name="INS_BODY_TO_GPS_X" value="7.0" unit="cm"/>
    <define name="INS_BODY_TO_GPS_Y" value="0.0" unit="cm"/>
    <define name="INS_BODY_TO_GPS_Z" value="4.0" unit="cm"/>

    <!--  <define name="USE_INS_MODULE"/>
    <define name="INS_ROLL_NEUTRAL_DEFAULT" value="0.0" unit="deg"/>
    <define name="INS_PITCH_NEUTRAL_DEFAULT" value="0.0" unit="deg"/>
    -->
    <define name="ROLL_NEUTRAL_DEFAULT" value="0" unit="deg"/>
    <define name="PITCH_NEUTRAL_DEFAULT" value="0" unit="deg"/>

        <!-- Use GPS altitude measurments and set the R gain -->
    <define name="USE_GPS_ALT" value="1"/>
    <define name="VFF_R_GPS" value="0.01"/>
  </section>

  <!-- ************************* SONAR ************************* -->
  <section name="SONAR" prefix="SONAR_">
    <define name="SCALE" value="0.016775" integer="16"/>
    <define name="OFFSET" value="0.0" unit="m"/> <!-- Landing gear height to tarmac, well 0 with this fyingwing :) -->
    <define name="MAX_RANGE" value="4.0"/>
    <define name="MIN_RANGE" value="0.5"/>
  </section>

  <!-- ************************* GAINS ************************* -->

  <!-- ************************* H ************************* -->
  <section name="HORIZONTAL CONTROL" prefix="H_CTL_">

     <!-- TODO: Tune values -->
     <define name="COURSE_PGAIN" value="0.743"/>
     <define name="COURSE_DGAIN" value="0.07"/>

     <define name="COURSE_TAU" value="0.5"/>
     <!--
     The prebank is an adjustment to the roll setting which is performed when the aircraft is
     trying to do a circle and when it is close to the circumference of the circle. This way
     it does not fly straight into the circumference but instead it starts to make a roll as
     the one needed to fly in circles.
     There is a value in the airframe file COURSE_PRE_BANK_CORRECTION which can be used to
     increase o decrease the effect. If set to 1 then the normal prebank is done.
     If set to 0.5 then half of the additional roll is done. This causes the aircraft to not roll
     enough in order to fly the intended circle and it ends up flying in a larger circle.
     A value > 1 makes it fly a smaller circle.

    https://github.com/paparazzi/paparazzi/blob/master/sw/airborne/modules/nav.c#L132
    -->
    <define name="COURSE_PRE_BANK_CORRECTION" value="0.95"/>

    <define name="ROLL_MAX_SETPOINT" value="30" unit="deg"/><!--  Determine best val without scaring the sh*t out of us-->
    <define name="PITCH_MAX_SETPOINT" value="30" unit="deg"/><!--  Determine best val without scaring the sh*t out of us-->
    <define name="PITCH_MIN_SETPOINT" value="-30" unit="deg"/><!--  Determine best val without scaring the sh*t out of us-->

    <define name="PITCH_PGAIN" value="17250"/>
    <define name="PITCH_DGAIN" value="500."/>
    <define name="PITCH_IGAIN" value="400"/>
    <define name="PITCH_KFFA"  value="0."/>
    <define name="PITCH_KFFD"  value="0."/>

    <define name="ELEVATOR_OF_ROLL" value="1400" unit="PPRZ_MAX"/>
    <define name="ROLL_SLEW" value="0.3"/>
    <define name="ROLL_ATTITUDE_GAIN" value="11000."/>
    <define name="ROLL_RATE_GAIN" value="1000."/>
    <define name="ROLL_IGAIN" value="100."/>
    <define name="ROLL_KFFA" value="0"/>
    <define name="ROLL_KFFD" value="0"/>

    <define name="PITCH_OF_ROLL" value="1." unit="deg"/><!-- TODO : still neede?-->
    <define name="AILERON_OF_THROTTLE" value="0.0"/><!-- TODO : still neede?-->

  </section>

  <!--  We have value of Classic as well as ETECH, this since airframe is frst flown Classic the ETECS, make tunng a bit easier
   It is NOT (yet?) switchable on the fly in flight -->

  <!-- ************************* V ************************* -->
  <section name="VERTICAL CONTROL" prefix="V_CTL_">
    <!-- power -->
    <define name="POWER_CTL_BAT_NOMINAL" value="11.4" unit="volt"/>

    <!-- Classic -->
    <!-- outer loop proportional gain -->
    <define name="ALTITUDE_PGAIN" value="0.12"/> <!--unit="(m/s)/m"-->

    <!-- disable climb rate limiter -->
    <define name="AUTO_CLIMB_LIMIT" value="2*V_CTL_ALTITUDE_MAX_CLIMB"/>

    <!-- auto throttle -->

    <!-- Cruise throttle + limits -->
    <define name="AUTO_THROTTLE_MIN_CRUISE_THROTTLE" value="0.25" unit="%"/>  <!-- TODO Determine -->
    <define name="AUTO_THROTTLE_NOMINAL_CRUISE_THROTTLE" value="0.40" unit="%"/> <!-- TODO Determine -->
    <define name="AUTO_THROTTLE_MAX_CRUISE_THROTTLE" value="0.85" unit="%"/>

    <define name="AUTO_THROTTLE_LOITER_TRIM" value="1000" unit="pprz_t"/>
    <define name="AUTO_THROTTLE_DASH_TRIM" value="-2000" unit="pprz_t"/>

    <define name="AUTO_THROTTLE_CLIMB_THROTTLE_INCREMENT" value="0.088" unit="%/(m/s)"/> <!-- TODO: Determine -->

    <!-- Climb loop (throttle) -->
    <define name="AUTO_THROTTLE_PGAIN" value="0.004" unit="%/(m/s)"/>
    <define name="AUTO_THROTTLE_IGAIN" value="0.0"/>
    <define name="AUTO_THROTTLE_DGAIN" value="0.0"/>
    <define name="AUTO_THROTTLE_PITCH_OF_VZ_PGAIN" value="0.077" unit="rad/(m/s)"/> <!-- TODO: Determine -->

    <define name="THROTTLE_SLEW_LIMITER" value="0.8" unit="m/s/s"/>  <!-- Limiter for e.g. a powerful motor -->

    <!-- airspeed control -->
    <!-- Best to never set AUTO_AIRSPEED_SETPOINT lower than airframe stall speed if you hate repairs ;) -->
    <!-- investigate: howto if higher then _AIRSPEED_SETPOINT then airframe tries to maintain a constand ground speed UNKNOWN -->
    <define name="AUTO_AIRSPEED_SETPOINT" value="16.0" unit="m/s"/>
    <define name="AUTO_AIRSPEED_THROTTLE_PGAIN" value="0.1" unit="%/(m/s)"/>
    <define name="AUTO_AIRSPEED_THROTTLE_DGAIN" value="0.12"/>
    <define name="AUTO_AIRSPEED_THROTTLE_IGAIN" value="0.0"/>
    <define name="AUTO_AIRSPEED_PITCH_PGAIN" value="0.06" unit="degree/(m/s)"/>
    <define name="AUTO_AIRSPEED_PITCH_DGAIN" value="0.0"/>
    <define name="AUTO_AIRSPEED_PITCH_IGAIN" value="0.042"/>

    <define name="AIRSPEED_MAX" value="30"/>  <!-- TODO: STILL NEEDED? -->
    <define name="AIRSPEED_MIN" value="8"/>  <!-- TODO: STILL NEEDED? -->

    <!-- pitch trim -->
    <define name="PITCH_LOITER_TRIM" value="0." unit="deg"/> <!-- TODO: STILL NEEDED? -->
    <define name="PITCH_DASH_TRIM" value="0." unit="deg"/> <!-- TODO: STILL NEEDED? -->

    <!-- groundspeed control -->
    <define name="AUTO_GROUNDSPEED_SETPOINT" value="15.0" unit="m/s"/>
    <define name="AUTO_GROUNDSPEED_PGAIN" value="1."/>
    <define name="AUTO_GROUNDSPEED_IGAIN" value="0."/>

    <define name="AIRSPEED_PGAIN" value="0.1"/>

    <!-- outer loop saturation -->
    <define name="ALTITUDE_MAX_CLIMB" value="4.0" unit="m/s"/> <!-- TODO: Determine -->
    <define name="MAX_ACCELERATION" value="4.0" unit="G"/> <!-- TODO: Determine -->

    <!-- auto pitch inner loop -->

    <!-- Climb loop (pitch) -->
    <define name="AUTO_PITCH_PGAIN" value="0.027"/> <!-- TODO: Determine -->
    <define name="AUTO_PITCH_DGAIN" value="0.01"/>   <!-- TODO: Determine -->
    <define name="AUTO_PITCH_IGAIN" value="0.00"/> <!-- TODO: Determine -->
    <!--define name="AUTO_PITCH_CLIMB_THROTTLE_INCREMENT" value="0.14"/-->
    <define name="AUTO_PITCH_MAX_PITCH" value="20" unit="deg"/><!-- TODO: Determine default and best -->
    <define name="AUTO_PITCH_MIN_PITCH" value="-20" unit="deg"/><!-- TODO: Determine default and best -->

    <!-- ============= ETECS ============= -->
    <define name="ENERGY_TOT_PGAIN" value="0.35"/> <!-- TODO: Determine -->
    <define name="ENERGY_TOT_IGAIN" value="0.30"/> <!-- TODO: Determine -->
    <define name="ENERGY_DIFF_PGAIN" value="0.40"/> <!-- TODO: Determine -->
    <define name="ENERGY_DIFF_IGAIN" value="0.35"/> <!-- TODO: Determine -->

    <define name="GLIDE_RATIO" value="7."/> <!-- 7 to 1 --> <!-- TODO: Determine also for big batt -->

    <!-- extra's -->
    <define name="AUTO_THROTTLE_OF_AIRSPEED_PGAIN" value="0.0"/>
    <define name="AUTO_THROTTLE_OF_AIRSPEED_IGAIN" value="0.0"/>

    <define name="AUTO_PITCH_OF_AIRSPEED_PGAIN" value="0.0"/> <!-- TODO: Determine -->
    <define name="AUTO_PITCH_OF_AIRSPEED_IGAIN" value="0.0"/> <!-- TODO: Determine -->
    <define name="AUTO_PITCH_OF_AIRSPEED_DGAIN" value="0.0"/> <!-- TODO: Determine -->

  </section>

  <!-- ***************************** AGGRESIVE ******************************* -->
  <section name="AGGRESSIVE" prefix="AGR_">
    <define name="BLEND_START" value="50" unit="m"/> <!-- Altitude Error to Initiate Aggressive Climb CANNOT BE ZERO!!-->
    <define name="BLEND_END" value="15" unit="m"/> <!-- Altitude Error to Blend Aggressive to Regular Climb Modes  CANNOT BE ZERO!!-->
    <define name="CLIMB_THROTTLE" value="0.95" unit="%"/> <!-- Throttlelevel for Aggressive Climb -->
    <define name="CLIMB_PITCH" value="30" unit="deg"/> <!-- Pitch for Aggressive Climb -->
    <define name="DESCENT_THROTTLE" value="0.3" unit="%"/> <!-- Throttlelevel for Aggressive Decent -->
    <define name="DESCENT_PITCH" value="-30" unit="deg"/> <!-- Pitch for Aggressive Decent -->
    <define name="CLIMB_NAV_RATIO" value="0.8" unit="%"/> <!-- Percent Navigation for Altitude Error Equal to Start Altitude -->
    <define name="DESCENT_NAV_RATIO" value="1.0" unit="%"/>
  </section>

<!-- ************************* BAT ************************* -->
  <section name="BAT">
    <define name="MilliAmpereOfAdc(_adc)" value="(_adc-632)*4.14"/>
    <define name="MILLIAMP_AT_IDLE_THROTTLE" value="1000" unit="mA"/>  <!-- TODO measure unknown value -->
    <define name="MILLIAMP_AT_FULL_THROTTLE" value="30000" unit="mA"/> <!-- TODO maybe 30A unknown value, measure(static and dynamic average), now used as avarage value if no current sensor is attatched -->
    <define name="MAX_BAT_LEVEL" value="12.6" unit="V"/> <!-- 3S lipo 3x4.2 = 12.6 -->
    <define name="LOW_BAT_LEVEL" value="10.6" unit="V"/>
    <define name="CRITIC_BAT_LEVEL" value="10.2" unit="V"/>
    <define name="CATASTROPHIC_BAT_LEVEL" value="9.3" unit="V"/>
    <define name="MIN_BAT_LEVEL" value="9.0" unit="V"/><!-- Get rid if this one maybr -->
  </section>

<!-- ************************* MISC ************************* -->
  <section name="MISC">

    <define name="MINIMUM_AIRSPEED" value="10." unit="m/s"/>
    <define name="NOMINAL_AIRSPEED" value="12." unit="m/s"/>
    <define name="MAXIMUM_AIRSPEED" value="22." unit="m/s"/>

    <!-- Values here are only referred to by the flightplan m*_s*_airspeed.xml in final AC -->
    <define name="CLIMB_AIRSPEED" value="10." unit="m/s"/> <!-- TODO get best values -->
    <define name="TRACKING_AIRSPEED" value="20." unit="m/s"/> <!-- TODO get best values -->
    <define name="GLIDE_AIRSPEED" value="10." unit="m/s"/> <!-- TODO get best values -->
    <define name="STALL_AIRSPEED" value="7." unit="m/s"/> <!-- measue limit of plane in testflight and set 80% from this --> <!-- No flap, an pct flp ratio-->
    <define name="RACE_AIRSPEED" value="21." unit="m/s"/> <!-- TODO determine -->
    <define name="MIN_SPEED_FOR_TAKEOFF" value="5." unit="m/s"/> <!-- TODO determine and change to make it for airspeed -->
    <define name="AIRSPEED_SETPOINT_SLEW" value="0.4" unit="m/s/s"/> <!-- TODO get best values -->

    <define name="TAKEOFF_PITCH_ANGLE" value="20" unit="deg"/> <!-- TODO get best values -->
    <define name="FLARE_PITCH_ANGLE" value="10" unit="deg"/> <!-- TODO get best values -->
    <define name="NAV_GLIDE_PITCH_TRIM" value="-1.0" unit="deg"/> <!-- TODO determine -->

    <define name="KILL_MODE_DISTANCE" value="MAX_DIST_FROM_HOME*1.3+HOME_RADIUS" unit="m"/>  <!--  improve value by default turn radius calc -->

    <define name="DEFAULT_CIRCLE_RADIUS" value="60." unit="m"/> <!-- TODO determine -->
    <define name="HOME_RADIUS" value="DEFAULT_CIRCLE_RADIUS" unit="m"/>
    <define name="LANDING_CIRCLE_RADIUS" value="55." unit="m"/> <!-- TODO determine or spiral a bit-->
    <!-- MIN_CIRCLE_RADIUS used and needed for spiral navigation function and panic autolanding turns-->
    <define name="MIN_CIRCLE_RADIUS" value="50." unit="m"/> <!-- TODO determine -->

    <define name="CARROT" value="6." unit="s"/> <!-- TODO maye ~?s -->

    <!--UNLOCKED_HOME_MODE if set to TRUE means that HOME mode does not get stuck.
    If not set before when you would enter home mode you had to flip a bit via the GCS to get out. -->
    <define name="UNLOCKED_HOME_MODE" value="TRUE"/>
    <!-- RC_LOST_MODE means that if your RC Transmitter signal is not received anymore in the autopilot, e.g. you switch it off
    or  fly a long range mission you define the wanted mode behaviour here.
    If you do not define it, it defaults to flying to the flightplan HOME -->
    <define name="RC_LOST_MODE" value="AP_MODE_MANUAL"/> <!-- set it to AP_MODE_AUTO2 after initial GPS and AIRSPEED ref test flight -->

    <!-- TODO SET some modem values with multipoint also the $AC_ID -->
    <!--  Here XBEE init will be misused to set SiK Si10xx based modems as the Hope and RFdesign -->
    <!--  <define name="XBEE_INIT" value="ATS17=$AC_ID\rATS16=134\rAT&W\rATZ\r" type="string"/>  -->
    <!--  <define name="NO_XBEE_API_INIT" value="TRUE"/> -->
 </section>

<!-- ************************* CATAPULT ************************* -->
<!--  Can as well be your handlaunch, the biological catapulting device ;) -->
  <section name="CATAPULT" prefix="NAV_CATAPULT_">
    <define name="MOTOR_DELAY" value="0.2" unit="s"/> <!-- TODO determine -->
    <define name="HEADING_DELAY" value="3.0" unit="s"/><!--  Set to quite a lower value if MAG is working 100% OK -->
    <define name="ACCELERATION_THRESHOLD" value="1.5"/> <!-- TODO determine -->
    <define name="INITIAL_PITCH" value="15.0" unit="deg"/> <!-- TODO determine from original-->
    <define name="INITIAL_THROTTLE" value="1.0"/>
  </section>

<!-- ************************* GLS_APPROACH ************************* -->
  <section name="GLS_APPROACH" prefix="APP_">
    <define name="ANGLE" value="7" unit="deg"/> <!-- TODO determine -->
    <define name="INTERCEPT_AF_SD" value="3" unit="m"/> <!-- TODO determine -->
    <define name="TARGET_SPEED" value="8" unit="m/s"/> <!-- TODO determine for 150Grams more BigBatt-->
  </section>

<!-- ************************ GCS SPECIFICS ******************************** -->
  <section name="GCS">
    <define name="SPEECH_NAME" value="Disco"/>
    <define name="AC_ICON" value="flyingwing"/>
    <define name="ALT_SHIFT_PLUS_PLUS" value="40"/> <!-- TODO: change for more testflight convinience -->
    <define name="ALT_SHIFT_PLUS" value="20"/>  <!-- TODO: change for more testflight convinience -->
    <define name="ALT_SHIFT_MINUS" value="-20"/>  <!-- TODO: change for more testflight convinience -->
  </section>

<!-- ************************ SIMU ******************************** -->
  <section name="SIMU">
    <define name="JSBSIM_MODEL" value="&quot;Malolo1&quot;"/>
    <!--define name="JSBSIM_INIT"   value="&quot;Malolo1-IC&quot;"/-->
    <define name="JSBSIM_LAUNCHSPEED" value="15.0"/>
    <define name="WEIGHT" value ="1."/>
    <define name="JSBSIM_IR_ROLL_NEUTRAL" value="RadOfDeg(0.)"/>
    <define name="JSBSIM_IR_PITCH_NEUTRAL" value="RadOfDeg(0.)"/>
    <define name="YAW_RESPONSE_FACTOR" value =".9"/>   <!--default 1.-->
    <define name="PITCH_RESPONSE_FACTOR" value ="1."/> <!--default 1.-->
    <define name="ROLL_RESPONSE_FACTOR" value ="20."/> <!--default 15-->
  </section>

</airframe>

